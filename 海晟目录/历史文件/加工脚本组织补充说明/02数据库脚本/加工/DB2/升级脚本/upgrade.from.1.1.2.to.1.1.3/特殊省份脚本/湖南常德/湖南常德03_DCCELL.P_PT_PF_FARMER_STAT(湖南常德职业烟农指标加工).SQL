--DROP PROCEDURE DCCELL.P_PT_PF_FARMER_STAT;
CREATE PROCEDURE DCCELL.P_PT_PF_FARMER_STAT()
BEGIN
  DECLARE V_PROC_NAME               VARCHAR(1000) DEFAULT 'P_PT_PF_FARMER_STAT';
  DECLARE V_STEP                    VARCHAR(500);
  DECLARE V_PT_YEAR                 DECIMAL(4);
  DECLARE V_CURRENTTIMESTAMP        TIMESTAMP;
  DECLARE V_LOG_GROUP               VARCHAR(32);
  DECLARE V_LAST_STEP               VARCHAR(32);
  DECLARE V_LOG                     VARCHAR(32);

  SET V_PT_YEAR = YEAR(CURRENT DATE);
  SET V_CURRENTTIMESTAMP = CURRENT TIMESTAMP;
  SET V_LOG = ' ';
  SET V_LOG_GROUP = TO_CHAR(V_CURRENTTIMESTAMP,'YYYY-MM-DD HH24:MI:SS');

  SET V_STEP = '1、P_PT_PF_FARMER_STAT-D';
  CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
  DELETE FROM R_TMP_FARMER_STAR WHERE BUSINESS_YEAR = V_PT_YEAR;

  SET V_STEP = '2、P_PT_PF_FARMER_STAT-I';
  CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
  INSERT INTO R_TMP_FARMER_STAR(
    FRM_FUND_UNIQUE_ID,
    BUSINESS_YEAR,
    FRM_CD,
    FRM_NAME,
    FRM_AGE,
    FRM_EDU,
    PLNT_START_YEAR,
    PLNT_YEAR

  )
  SELECT
          FRM_FUND_UNIQUE_ID,
          BIZ_YEAR AS BUSINESS_YEAR,
          FRM_CD,
          FRM_NAME,
          CASE WHEN FRM.birth_date IS NOT NULL THEN (V_PT_YEAR-YEAR(FRM.birth_date)) ELSE NULL END AS FRM_AGE,
          EDUCTION_EK AS FRM_EDU,
          BIZ_YEAR AS PLNT_START_YEAR,
          1        AS CONTINUE_PLNT_YEAR--select *
          FROM CM_PM_FRM_FUND FRM WHERE DATA_STATE='1' AND BIZ_YEAR=V_PT_YEAR AND EXISTS(
                SELECT 1
                FROM PC_CO_CONTRACT_MAS A
                WHERE DATA_STATE='1' --and audit_state='3'
                AND CANCEL_STATE = '0'
                AND BIZ_YEAR =V_PT_YEAR AND FRM.FRM_CD=A.FRM_CD);
  FETCH_LOOP:
   LOOP
    IF V_PT_YEAR > 2010 THEN
      SET V_PT_YEAR=V_PT_YEAR-1;
      UPDATE R_TMP_FARMER_STAR A
         SET PLNT_YEAR = PLNT_YEAR + 1,
             PLNT_START_YEAR = V_PT_YEAR
       WHERE EXISTS(
               SELECT 1
                 FROM PC_CO_CONTRACT_MAS B
                WHERE DATA_STATE='1'
                  AND CANCEL_STATE = '0'
                  AND B.BIZ_YEAR = V_PT_YEAR
                  AND A.FRM_CD = B.FRM_CD
             )
         AND A.PLNT_START_YEAR = V_PT_YEAR+1
      ;
      COMMIT;
    ELSE
      LEAVE FETCH_LOOP;
    END IF;
   END LOOP FETCH_LOOP;
------------------
--更新组织行政单位
------------------
    UPDATE R_TMP_FARMER_STAR FRM SET (PROV,PROV_NAME,CITC,CITC_NAME,COUC,COUC_NAME,STAC,STAC_NAME,SSTC,SSTC_NAME,
            AREA_PROV,AREA_PROV_NAME,AREA_CITC,AREA_CITC_NAME,AREA_COUC,AREA_COUC_NAME,AREA_TOWN,TOWN_NAME,AREA_VAGE,VAGE_NAME,AREA_GRUP,GRUP_NAME)=(
    SELECT PROV,PROV_NAME,CITC,CITC_NAME,COUC,COUC_NAME,STAC,STAC_NAME,SSTC,SSTC_NAME,
           AREA_PROV,AREA_PROV_NAME,AREA_CITC,AREA_CITC_NAME,AREA_COUC,AREA_COUC_NAME,AREA_TOWN,TOWN_NAME,AREA_VAGE,VAGE_NAME,AREA_GRUP,GRUP_NAME FROM(
             SELECT * FROM
            R_FARMER WHERE DATA_STATE='1') FARMER WHERE FARMER.BUSINESS_YEAR=FRM.BUSINESS_YEAR AND FRM.FRM_CD=FARMER.FARMER_CD
    );
------------------
--更新种植规模
------------------
  UPDATE R_TMP_FARMER_STAR FRM SET (CNTRCT_PLNT_AREA,CNTRCT_WGHT)=
   (SELECT CNTRCT_PLNT_AREA,CNTRCT_WGHT FROM(
     SELECT BUSINESS_YEAR      AS BUSINESS_YEAR,
          FARMER_CD          AS FRM_CD,
          FARMER_NAME        AS FRM_NAME,
          sum(CNTRCT_SLL_WGHT)    AS CNTRCT_WGHT,
          sum(CNTRCT_PLNT_AREA)   AS CNTRCT_PLNT_AREA
     FROM R_PC_CTRT_PC_D
    WHERE  DATA_STATE='1'
      AND CNTRCT_TYPE = 'NOR_CONT'
    GROUP BY
          BUSINESS_YEAR,
          FARMER_CD,
          FARMER_NAME) CTRT WHERE FRM.BUSINESS_YEAR=CTRT.BUSINESS_YEAR AND FRM.FRM_CD=CTRT.FRM_CD);
------------------
--更新
------------------
    UPDATE R_TMP_FARMER_STAR FRM SET (UPMID_RATE,MIDUP_RATE,UP_RATE)=
   (SELECT case when BUY_WGHT is not null and BUY_WGHT > 0 and UPMID_BUY_WGHT is not null
            then (UPMID_BUY_WGHT * 100.00)/BUY_WGHT else 0 end
            as UPMID_RATE,
            case when BUY_WGHT is not null and BUY_WGHT > 0 and MIDUP_BUY_WGHT is not null
            then (MIDUP_BUY_WGHT * 100.00)/BUY_WGHT else 0 end
            as MIDUP_RATE,
            case when BUY_WGHT is not null and BUY_WGHT > 0 and UP_BUY_WGHT is not null
            then (UPMID_BUY_WGHT * 100.00)/BUY_WGHT else 0 end
            as UP_RATE FROM(
      SELECT BUSINESS_YEAR      AS BUSINESS_YEAR,
          FARMER_CD          AS FARMER_CD,
          FARMER_NAME        AS FARMER_NAME,
          sum(BUY_WGHT)      AS BUY_WGHT,
          sum(case when leaf_rank_cd ='1' then BUY_WGHT else 0 end) AS UP_BUY_WGHT,
          sum(case when (leaf_rank_cd ='1' and LEAF_POSITION_CD ='2') then BUY_WGHT else 0 end) AS MIDUP_BUY_WGHT,
          sum(case when leaf_rank_cd in ('1','2') then BUY_WGHT else 0 end) AS UPMID_BUY_WGHT
        --select *
    FROM R_BU_INV_FM_D
    WHERE DATA_STATE='1'
    GROUP BY
          BUSINESS_YEAR,
          FARMER_CD,
          FARMER_NAME) INV WHERE FRM.BUSINESS_YEAR=INV.BUSINESS_YEAR AND FRM.FRM_CD=INV.FARMER_CD);
 -------------
 --合同履约率
 -------------
 UPDATE R_TMP_FARMER_STAR FRM SET BUY_CNTRCT_RATE=(
          SELECT BUY_CNTRCT_RATE FROM(
          SELECT FRM_CD, case when A.CNTRCT_WGHT is not null and A.CNTRCT_WGHT > 0 and A.BUY_WGHT is not null
            then (A.BUY_WGHT * 100.00)/A.CNTRCT_WGHT else 0 end
           as BUY_CNTRCT_RATE
          FROM R_TMP_FARMER_STAR A ) S WHERE FRM.FRM_CD=S.FRM_CD
          );
     COMMIT;
END
@