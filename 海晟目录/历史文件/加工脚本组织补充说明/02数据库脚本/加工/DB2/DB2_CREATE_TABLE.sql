------------------------------------------------------------
--1.last_time 业务 烟农
--2.加工表已经被删的烟农
--3.这些烟农的组织单位到点 distinct
--4.这些烟农的村组 distinct (case) (FM AREA_CD)
------------------------------------------------------------
--drop table R_PT_OBJ_I;
create table R_PT_OBJ_I
(
   OBJ_CD               VARCHAR(32),
   OBJ_TYPE             VARCHAR(32), --FMR，ORG，DIV
   PROC_NAME            VARCHAR(128)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
;


--index
CREATE INDEX I_PC_FARMER_I_1  ON R_PT_OBJ_I(OBJ_CD);


------------------------------------------------------------
--
------------------------------------------------------------

--drop table R_PT_RECOVERY_CB_D;
create table R_PT_RECOVERY_CB_D
(
   RECOVERY_CB_D_ID     VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   LEAF_POSITION_CD     VARCHAR(32),
   LEAF_POSITION_NAME   VARCHAR(64),
   RECOVERY_AREA        DECIMAL(24,6)          default 0,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   constraint PK_R_PT_RECOVERY_CB_D primary key (RECOVERY_CB_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_RECOVERY_CB_D_1 ON R_PT_RECOVERY_CB_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_RECOVERY_CB_D_2 ON R_PT_RECOVERY_CB_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_RECOVERY_CB_D_3 ON R_PT_RECOVERY_CB_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_RECOVERY_CB_D_4 ON R_PT_RECOVERY_CB_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_RECOVERY_CB_D_5 ON R_PT_RECOVERY_CB_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------

--drop table R_PT_RECOVERY_DV_D;
create table R_PT_RECOVERY_DV_D
(
   RECOVERY_DV_D_ID     VARCHAR(32)            not null,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   LEAF_POSITION_CD     VARCHAR(32),
   LEAF_POSITION_NAME   VARCHAR(64),
   RECOVERY_AREA        DECIMAL(24,6)          default 0,
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   constraint PK_R_PT_RECOVERY_DV_D primary key (RECOVERY_DV_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_RECOVERY_DV_D_1 ON R_PT_RECOVERY_DV_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_RECOVERY_DV_D_2 ON R_PT_RECOVERY_DV_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_RECOVERY_DV_D_3 ON R_PT_RECOVERY_DV_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_RECOVERY_DV_D_4 ON R_PT_RECOVERY_DV_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_RECOVERY_DV_D_5 ON R_PT_RECOVERY_DV_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_RECOVERY_DV_D_6 ON R_PT_RECOVERY_DV_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_RECOVERY_DV_D_7 ON R_PT_RECOVERY_DV_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_RECOVERY_DV_D_8 ON R_PT_RECOVERY_DV_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_RECOVERY_DV_D_9 ON R_PT_RECOVERY_DV_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_RECOVERY_DV_D_10 ON R_PT_RECOVERY_DV_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------

--drop table R_PT_INDEMNIFY_CB_Y;
create table R_PT_INDEMNIFY_CB_Y
(
   INDEMNIFY_CB_Y_ID    VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   CALAMITY_AREA        DECIMAL(24,6)          default 0,
   ASSIGN_CALAMITY_AREA DECIMAL(24,6)          default 0,
   CALAMITY_WGHT        DECIMAL(18,3),
   LOSE_MONEY           DECIMAL(24,8)          default 0,
   COMPEN_MONEY         DECIMAL(24,8)          default 0,
   CALAMITY_FRM_QTY     DECIMAL(12)            default 0,
   DISEASE_TYPE         VARCHAR(32)            ,
   DISASTE_TYPE         VARCHAR(32)            ,
   CALAMITY_TYPE         VARCHAR(32)            , 
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   constraint PK_R_PT_INDEMNIFY_CB_Y primary key (INDEMNIFY_CB_Y_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_INDEMNIFY_CB_Y_1 ON R_PT_INDEMNIFY_CB_Y(CITC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_CB_Y_2 ON R_PT_INDEMNIFY_CB_Y(COUC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_CB_Y_3 ON R_PT_INDEMNIFY_CB_Y(STAC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_CB_Y_4 ON R_PT_INDEMNIFY_CB_Y(SSTC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_CB_Y_5 ON R_PT_INDEMNIFY_CB_Y(BUSINESS_YEAR);

------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_INDEMNIFY_DV_Y;
create table R_PT_INDEMNIFY_DV_Y
(
   INDEMNIFY_DV_Y_ID    VARCHAR(32)            not null,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   CALAMITY_AREA        DECIMAL(24,6)          default 0,
   ASSIGN_CALAMITY_AREA DECIMAL(24,6)          default 0,
   CALAMITY_WGHT        DECIMAL(18,3),
   LOSE_MONEY           DECIMAL(24,8)          default 0,
   COMPEN_MONEY         DECIMAL(24,8)          default 0,
   CALAMITY_FRM_QTY     DECIMAL(12)            default 0,
   DISEASE_TYPE         VARCHAR(32)            ,
   DISASTE_TYPE         VARCHAR(32)            ,
   CALAMITY_TYPE         VARCHAR(32)            , 
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   constraint PK_R_PT_INDEMNIFY_DV_Y primary key (INDEMNIFY_DV_Y_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_INDEMNIFY_DV_Y_1 ON R_PT_INDEMNIFY_DV_Y(AREA_CITC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_DV_Y_2 ON R_PT_INDEMNIFY_DV_Y(AREA_COUC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_DV_Y_3 ON R_PT_INDEMNIFY_DV_Y(AREA_TOWN,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_DV_Y_4 ON R_PT_INDEMNIFY_DV_Y(AREA_VAGE,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_DV_Y_5 ON R_PT_INDEMNIFY_DV_Y(AREA_GRUP,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_DV_Y_6 ON R_PT_INDEMNIFY_DV_Y(CITC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_DV_Y_7 ON R_PT_INDEMNIFY_DV_Y(COUC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_DV_Y_8 ON R_PT_INDEMNIFY_DV_Y(STAC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_DV_Y_9 ON R_PT_INDEMNIFY_DV_Y(SSTC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_DV_Y_10 ON R_PT_INDEMNIFY_DV_Y(BUSINESS_YEAR);

------------------------------------------------------------
--
------------------------------------------------------------

--PT_7.3定损理赔情况表(按烟农、年度)
--drop table R_PT_INDEMNIFY_FM_Y;
create table R_PT_INDEMNIFY_FM_Y
(
   INDEMNIFY_FM_Y_ID    VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   CALAMITY_AREA        DECIMAL(24,6)          default 0,
   ASSIGN_CALAMITY_AREA DECIMAL(24,6)          default 0,
   CALAMITY_WGHT        DECIMAL(18,3),
   LOSE_MONEY           DECIMAL(24,8)          default 0,
   COMPEN_MONEY         DECIMAL(24,8)          default 0,
   FARMER_ID            VARCHAR(32),
   FARMER_CD            VARCHAR(32),
   FARMER_NAME          VARCHAR(64),
   FIELD_BLOCK_ID       VARCHAR(32),
   FIELD_BLOCK_CD       VARCHAR(32),
   FIELD_BLOCK_NAME     VARCHAR(64),
   DISEASE_TYPE         VARCHAR(32)            ,
   DISASTE_TYPE         VARCHAR(32)            ,
   CALAMITY_TYPE         VARCHAR(32)            , 
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   TECHNICIAN_ID        VARCHAR(32),
   TECHNICIAN_NAME      VARCHAR(64),
   constraint PK_R_PT_INDEMNIFY_DV_Y primary key (INDEMNIFY_FM_Y_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_INDEMNIFY_FM_Y_1 ON R_PT_INDEMNIFY_FM_Y(AREA_CITC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_FM_Y_2 ON R_PT_INDEMNIFY_FM_Y(AREA_COUC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_FM_Y_3 ON R_PT_INDEMNIFY_FM_Y(AREA_TOWN,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_FM_Y_4 ON R_PT_INDEMNIFY_FM_Y(AREA_VAGE,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_FM_Y_5 ON R_PT_INDEMNIFY_FM_Y(AREA_GRUP,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_FM_Y_6 ON R_PT_INDEMNIFY_FM_Y(CITC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_FM_Y_7 ON R_PT_INDEMNIFY_FM_Y(COUC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_FM_Y_8 ON R_PT_INDEMNIFY_FM_Y(STAC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_FM_Y_9 ON R_PT_INDEMNIFY_FM_Y(SSTC,BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_FM_Y_10 ON R_PT_INDEMNIFY_FM_Y(BUSINESS_YEAR);
CREATE INDEX I_PT_INDEMNIFY_FM_Y_11 ON R_PT_INDEMNIFY_FM_Y(FARMER_CD,BUSINESS_YEAR); 

------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_CALAMITY_CB_D;
create table R_PT_CALAMITY_CB_D
(
   CALAMITY_CB_D_ID     VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   CALAMITY_TYPE        VARCHAR(32),
   DISEASE_TYPE         VARCHAR(32),
   DISASTE_TYPE         VARCHAR(32),
   CALAMITY_LEVEL_EK    VARCHAR(32),
   CALAMITY_QTY         DECIMAL(12),
   CALAMITY_AREA        DECIMAL(24,6)          default 0,
   ASSIGN_CALAMITY_AREA DECIMAL(24,6)          default 0,
   DAMAGE_LOSE_WGHT     DECIMAL(24,6)          default 0,
   CALAMITY_FRM_QTY     DECIMAL(12)            default 0,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   constraint PK_R_PT_CALAMITY_CB_D primary key (CALAMITY_CB_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_CALAMITY_CB_D_1 ON R_PT_CALAMITY_CB_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_CB_D_2 ON R_PT_CALAMITY_CB_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_CB_D_3 ON R_PT_CALAMITY_CB_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_CB_D_4 ON R_PT_CALAMITY_CB_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_CB_D_5 ON R_PT_CALAMITY_CB_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------

--drop table R_PT_CALAMITY_DV_D;
create table R_PT_CALAMITY_DV_D
(
   CALAMITY_DV_D_ID     VARCHAR(32)            not null,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   CALAMITY_TYPE        VARCHAR(32),
   DISEASE_TYPE         VARCHAR(32),
   DISASTE_TYPE         VARCHAR(32),
   CALAMITY_LEVEL_EK    VARCHAR(32),
   CALAMITY_QTY         DECIMAL(12),
   CALAMITY_AREA        DECIMAL(24,6)          default 0,
   ASSIGN_CALAMITY_AREA DECIMAL(24,6)          default 0,
   DAMAGE_LOSE_WGHT     DECIMAL(24,6)          default 0,
   CALAMITY_FRM_QTY     DECIMAL(12)            default 0,
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   constraint PK_R_PT_CALAMITY_DV_D primary key (CALAMITY_DV_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_CALAMITY_DV_D_1 ON R_PT_CALAMITY_DV_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_DV_D_2 ON R_PT_CALAMITY_DV_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_DV_D_3 ON R_PT_CALAMITY_DV_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_DV_D_4 ON R_PT_CALAMITY_DV_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_DV_D_5 ON R_PT_CALAMITY_DV_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_DV_D_6 ON R_PT_CALAMITY_DV_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_DV_D_7 ON R_PT_CALAMITY_DV_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_DV_D_8 ON R_PT_CALAMITY_DV_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_DV_D_9 ON R_PT_CALAMITY_DV_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_DV_D_10 ON R_PT_CALAMITY_DV_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------


--PT_7.1烟农受灾情况表（按烟农、日期）
--drop table R_PT_CALAMITY_FM_D;
create table R_PT_CALAMITY_FM_D
(
   CALAMITY_FM_D_ID     VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   CALAMITY_TYPE        VARCHAR(32),
   DISEASE_TYPE         VARCHAR(32),
   DISASTE_TYPE         VARCHAR(32),
   CALAMITY_LEVEL_EK    VARCHAR(32),
   CALAMITY_QTY         DECIMAL(12),
   CALAMITY_AREA        DECIMAL(24,6)          default 0,
   ASSIGN_CALAMITY_AREA DECIMAL(24,6)          default 0,
   DAMAGE_LOSE_WGHT     DECIMAL(24,6)          default 0,
   FIELD_BLOCK_AREA     DECIMAL(24,6)          default 0,
   --CALAMITY_FRM_QTY     DECIMAL(24,6)          default 1,
   FARMER_ID            VARCHAR(32),
   FARMER_CD            VARCHAR(32),
   FARMER_NAME          VARCHAR(64),
   FIELD_BLOCK_ID       VARCHAR(32),
   FIELD_BLOCK_CD       VARCHAR(32),
   FIELD_BLOCK_NAME     VARCHAR(64),
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   TECHNICIAN_ID        VARCHAR(32),
   TECHNICIAN_NAME      VARCHAR(64),
   constraint PK_R_PT_CALAMITY_FM_D primary key (CALAMITY_FM_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_CALAMITY_FM_D_1 ON R_PT_CALAMITY_FM_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_FM_D_2 ON R_PT_CALAMITY_FM_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_FM_D_3 ON R_PT_CALAMITY_FM_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_FM_D_4 ON R_PT_CALAMITY_FM_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_FM_D_5 ON R_PT_CALAMITY_FM_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_FM_D_6 ON R_PT_CALAMITY_FM_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_FM_D_7 ON R_PT_CALAMITY_FM_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_FM_D_8 ON R_PT_CALAMITY_FM_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_FM_D_9 ON R_PT_CALAMITY_FM_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_FM_D_10 ON R_PT_CALAMITY_FM_D(BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_CALAMITY_FM_D_11 ON R_PT_CALAMITY_FM_D(FARMER_CD,BUSINESS_DATE,BUSINESS_YEAR); 


------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_FILM_RECY_CB_D;
create table R_PT_FILM_RECY_CB_D
(
   FILM_RECY_CB_D_ID    VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   COVER_AREA           DECIMAL(24,6)          default 0,
   RECY_ARA             DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   SUBSIDE_MONEY        DECIMAL(24,8)          default 0,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   constraint PK_R_PT_FILM_RECY_CB_D primary key (FILM_RECY_CB_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_FILM_RECY_CB_D_1 ON R_PT_FILM_RECY_CB_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_CB_D_2 ON R_PT_FILM_RECY_CB_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_CB_D_3 ON R_PT_FILM_RECY_CB_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_CB_D_4 ON R_PT_FILM_RECY_CB_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_CB_D_5 ON R_PT_FILM_RECY_CB_D(BUSINESS_DATE,BUSINESS_YEAR);
 
 
 ------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_FILM_RECY_DV_D;
create table R_PT_FILM_RECY_DV_D
(
   FILM_RECY_DV_D_ID    VARCHAR(32)            not null,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   COVER_AREA           DECIMAL(24,6)          default 0,
   RECY_ARA             DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   SUBSIDE_MONEY        DECIMAL(24,8)          default 0,
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   constraint PK_R_PT_FILM_RECY_DV_D primary key (FILM_RECY_DV_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_FILM_RECY_DV_D_1 ON R_PT_FILM_RECY_DV_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_DV_D_2 ON R_PT_FILM_RECY_DV_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_DV_D_3 ON R_PT_FILM_RECY_DV_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_DV_D_4 ON R_PT_FILM_RECY_DV_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_DV_D_5 ON R_PT_FILM_RECY_DV_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_DV_D_6 ON R_PT_FILM_RECY_DV_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_DV_D_7 ON R_PT_FILM_RECY_DV_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_DV_D_8 ON R_PT_FILM_RECY_DV_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_DV_D_9 ON R_PT_FILM_RECY_DV_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_DV_D_10 ON R_PT_FILM_RECY_DV_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------


--PT_6.4地膜回收（按烟农、日期）
--drop table R_PT_FILM_RECY_FM_D;
create table R_PT_FILM_RECY_FM_D
(
   FILM_RECY_FM_D_ID    VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   COVER_AREA           DECIMAL(24,6)          default 0,
   RECY_ARA             DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   SUBSIDE_MONEY        DECIMAL(24,8)          default 0,
   FARMER_ID            VARCHAR(32),
   FARMER_CD            VARCHAR(32),
   FARMER_NAME          VARCHAR(64),
   FIELD_BLOCK_ID       VARCHAR(32),
   FIELD_BLOCK_CD       VARCHAR(32),
   FIELD_BLOCK_NAME     VARCHAR(64),
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   TECHNICIAN_ID        VARCHAR(32),
   TECHNICIAN_NAME      VARCHAR(64),
   constraint PK_R_PT_FILM_RECY_FM_D primary key (FILM_RECY_FM_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_FILM_RECY_FM_D_1 ON R_PT_FILM_RECY_FM_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_FM_D_2 ON R_PT_FILM_RECY_FM_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_FM_D_3 ON R_PT_FILM_RECY_FM_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_FM_D_4 ON R_PT_FILM_RECY_FM_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_FM_D_5 ON R_PT_FILM_RECY_FM_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_FM_D_6 ON R_PT_FILM_RECY_FM_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_FM_D_7 ON R_PT_FILM_RECY_FM_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_FM_D_8 ON R_PT_FILM_RECY_FM_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_FM_D_9 ON R_PT_FILM_RECY_FM_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_FM_D_10 ON R_PT_FILM_RECY_FM_D(BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FILM_RECY_FM_D_11 ON R_PT_FILM_RECY_FM_D(FARMER_CD,BUSINESS_DATE,BUSINESS_YEAR); 


--drop table R_PT_YY_GROW_CB_D;
create table R_PT_YY_GROW_CB_D
(
   YY_GROW_CB_D_ID      VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   ROSETTE_AREA         DECIMAL(24,6)          default 0,
   GWOU_UP_AREA         DECIMAL(24,6)          default 0,
   SQUARING_AREA        DECIMAL(24,6)          default 0,
   ROOFED_AREA          DECIMAL(24,6)          default 0,
   ROSETTE_PROPESS_AREA DECIMAL(24,6)          default 0,
   GWOU_UP_PROPESS_AREA DECIMAL(24,6)          default 0,
   SQUARING_PROPESS_AREA DECIMAL(24,6)         default 0,
   ROOFED_PROPESS_AREA  DECIMAL(24,6)          default 0,
   AVG_LEAVE_LEAF_QTY   DECIMAL(24,6)            default 0,
   GROW_STATUS          VARCHAR(32)            ,
   LEAF_NUM             DECIMAL(24,6)             default 0,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   constraint PK_R_PT_FILM_RECY_FM_D primary key (YY_GROW_CB_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_YY_GROW_CB_D_6 ON R_PT_YY_GROW_CB_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_CB_D_7 ON R_PT_YY_GROW_CB_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_CB_D_8 ON R_PT_YY_GROW_CB_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_CB_D_9 ON R_PT_YY_GROW_CB_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_CB_D_10 ON R_PT_YY_GROW_CB_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_YY_GROW_FM_D;
create table R_PT_YY_GROW_FM_D
(
   YY_GROW_FM_D_ID      VARCHAR(32)            not null,
   FARMER_ID            VARCHAR(32),
   FARMER_CD            VARCHAR(32),
   FARMER_NAME          VARCHAR(64),
   FIELD_BLOCK_ID       VARCHAR(32),
   FIELD_BLOCK_CD       VARCHAR(32),
   FIELD_BLOCK_NAME     VARCHAR(64),
   TECHNICIAN_ID        VARCHAR(32),
   TECHNICIAN_NAME      VARCHAR(64),
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   ROSETTE_AREA         DECIMAL(24,6)          default 0,
   ROSETTE_PROPESS_AREA DECIMAL(24,6)          default 0,
   GWOU_UP_AREA         DECIMAL(24,6)          default 0,
   GWOU_UP_PROPESS_AREA DECIMAL(24,6)          default 0,
   SQUARING_AREA        DECIMAL(24,6)          default 0,
   SQUARING_PROPESS_AREA DECIMAL(24,6)          default 0,
   ROOFED_AREA          DECIMAL(24,6)          default 0,
   ROOFED_PROPESS_AREA  DECIMAL(24,6)          default 0,
   AVG_LEAVE_LEAF_QTY   DECIMAL(24,6)            default 0,
   GROW_STATUS          VARCHAR(32)            ,
   LEAF_NUM             DECIMAL(24,6)             default 0,
   constraint PK_R_PT_FILM_RECY_FM_D primary key (YY_GROW_FM_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_YY_GROW_FM_D_1 ON R_PT_YY_GROW_FM_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_FM_D_2 ON R_PT_YY_GROW_FM_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_FM_D_3 ON R_PT_YY_GROW_FM_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_FM_D_4 ON R_PT_YY_GROW_FM_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_FM_D_5 ON R_PT_YY_GROW_FM_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_FM_D_6 ON R_PT_YY_GROW_FM_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_FM_D_7 ON R_PT_YY_GROW_FM_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_FM_D_8 ON R_PT_YY_GROW_FM_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_FM_D_9 ON R_PT_YY_GROW_FM_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_FM_D_10 ON R_PT_YY_GROW_FM_D(BUSINESS_DATE,BUSINESS_YEAR);



------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_YY_GROW_DV_D;
create table R_PT_YY_GROW_DV_D
(
   YY_GROW_DV_D_ID      VARCHAR(32)            not null,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   ROSETTE_AREA         DECIMAL(24,6)          default 0,
   GWOU_UP_AREA         DECIMAL(24,6)          default 0,
   SQUARING_AREA        DECIMAL(24,6)          default 0,
   ROOFED_AREA          DECIMAL(24,6)          default 0,
   ROSETTE_PROPESS_AREA DECIMAL(24,6)          default 0,
   GWOU_UP_PROPESS_AREA DECIMAL(24,6)          default 0,
   SQUARING_PROPESS_AREA DECIMAL(24,6)         default 0,
   ROOFED_PROPESS_AREA  DECIMAL(24,6)          default 0,
   AVG_LEAVE_LEAF_QTY   DECIMAL(24,6)            default 0,
   GROW_STATUS          VARCHAR(32)            ,
   LEAF_NUM             DECIMAL(24,6)             default 0,
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   constraint PK_R_PT_FILM_RECY_FM_D primary key (YY_GROW_DV_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_YY_GROW_DV_D_1 ON R_PT_YY_GROW_DV_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_DV_D_2 ON R_PT_YY_GROW_DV_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_DV_D_3 ON R_PT_YY_GROW_DV_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_DV_D_4 ON R_PT_YY_GROW_DV_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_DV_D_5 ON R_PT_YY_GROW_DV_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_DV_D_6 ON R_PT_YY_GROW_DV_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_DV_D_7 ON R_PT_YY_GROW_DV_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_DV_D_8 ON R_PT_YY_GROW_DV_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_DV_D_9 ON R_PT_YY_GROW_DV_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_YY_GROW_DV_D_10 ON R_PT_YY_GROW_DV_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------



--drop table R_PT_DT_CB_D;
create table R_PT_DT_CB_D
(
   DT_CB_D_ID           VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   UNCOVER_AREA         DECIMAL(24,6)          default 0,
   MANURE_AREA          DECIMAL(24,6)          default 0,
   PTSX_AREA            DECIMAL(24,6)          default 0,
   PREVENT_AREA         DECIMAL(24,6)          default 0,
   BUTTON_POLE_AREA     DECIMAL(24,6)          default 0,
   DEBRIS_CLEAN_AREA    DECIMAL(24,6)          default 0,
   UNCOVER_ROOFED_AREA  DECIMAL(24,6)           default 0,
   MANURE_ROOFED_AREA   DECIMAL(24,6)           default 0,
   PTSX_ROOFED_AREA     DECIMAL(24,6)           default 0,
   PREVENT_ROOFED_AREA  DECIMAL(24,6)           default 0,
   BUTTON_POLE_ROOFED_AREA  DECIMAL(24,6)       default 0,
   DEBRIS_CLEAN_ROOFED_AREA DECIMAL(24,6)       default 0,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   constraint PK_R_PT_FILM_RECY_FM_D primary key (DT_CB_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_DT_CB_D_1 ON R_PT_DT_CB_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_CB_D_2 ON R_PT_DT_CB_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_CB_D_3 ON R_PT_DT_CB_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_CB_D_4 ON R_PT_DT_CB_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_CB_D_5 ON R_PT_DT_CB_D(BUSINESS_DATE,BUSINESS_YEAR);
 
 
 ------------------------------------------------------------
--
------------------------------------------------------------



--drop table R_PT_DT_DV_D;
create table R_PT_DT_DV_D
(
   DT_DV_D_ID           VARCHAR(32)            not null,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   UNCOVER_AREA         DECIMAL(24,6)          default 0,
   MANURE_AREA          DECIMAL(24,6)          default 0,
   PTSX_AREA            DECIMAL(24,6)          default 0,
   PREVENT_AREA         DECIMAL(24,6)          default 0,
   BUTTON_POLE_AREA     DECIMAL(24,6)          default 0,
   DEBRIS_CLEAN_AREA    DECIMAL(24,6)          default 0,
   UNCOVER_ROOFED_AREA  DECIMAL(24,6)           default 0,
   MANURE_ROOFED_AREA   DECIMAL(24,6)           default 0,
   PTSX_ROOFED_AREA     DECIMAL(24,6)           default 0,
   PREVENT_ROOFED_AREA  DECIMAL(24,6)           default 0,
   BUTTON_POLE_ROOFED_AREA  DECIMAL(24,6)       default 0,
   DEBRIS_CLEAN_ROOFED_AREA DECIMAL(24,6)       default 0,
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   constraint PK_R_PT_DT_DV_D primary key (DT_DV_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_DT_DV_D_1 ON R_PT_DT_DV_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_DV_D_2 ON R_PT_DT_DV_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_DV_D_3 ON R_PT_DT_DV_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_DV_D_4 ON R_PT_DT_DV_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_DV_D_5 ON R_PT_DT_DV_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_DV_D_6 ON R_PT_DT_DV_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_DV_D_7 ON R_PT_DT_DV_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_DV_D_8 ON R_PT_DT_DV_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_DV_D_9 ON R_PT_DT_DV_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_DV_D_10 ON R_PT_DT_DV_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------



--drop table R_PT_DT_FM_D;
create table R_PT_DT_FM_D
(
   DT_FM_D_ID           VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   UNCOVER_AREA         DECIMAL(24,6)          default 0,
   UNCOVER_ROOFED_AREA  DECIMAL(24,6)          default 0,
   MANURE_AREA          DECIMAL(24,6)          default 0,
   MANURE_ROOFED_AREA   DECIMAL(24,6)          default 0,
   PTSX_AREA            DECIMAL(24,6)          default 0,
   PTSX_ROOFED_AREA     DECIMAL(24,6)          default 0,
   PREVENT_AREA         DECIMAL(24,6)          default 0,
   PREVENT_ROOFED_AREA  DECIMAL(24,6)          default 0,
   BUTTON_POLE_AREA     DECIMAL(24,6)          default 0,
   BUTTON_POLE_ROOFED_AREA DECIMAL(24,6)          default 0,
   DEBRIS_CLEAN_AREA    DECIMAL(24,6)          default 0,
   DEBRIS_CLEAN_ROOFED_AREA DECIMAL(24,6)          default 0,
   FARMER_ID            VARCHAR(32),
   FARMER_CD            VARCHAR(32),
   FARMER_NAME          VARCHAR(64),
   FIELD_BLOCK_ID       VARCHAR(32),
   FIELD_BLOCK_CD       VARCHAR(32),
   FIELD_BLOCK_NAME     VARCHAR(64),
   TECHNICIAN_ID        VARCHAR(32),
   TECHNICIAN_NAME      VARCHAR(64),
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   constraint PK_R_PT_DT_FM_D primary key (DT_FM_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_DT_FM_D_1 ON R_PT_DT_FM_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_FM_D_2 ON R_PT_DT_FM_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_FM_D_3 ON R_PT_DT_FM_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_FM_D_4 ON R_PT_DT_FM_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_FM_D_5 ON R_PT_DT_FM_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_FM_D_6 ON R_PT_DT_FM_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_FM_D_7 ON R_PT_DT_FM_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_FM_D_8 ON R_PT_DT_FM_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_FM_D_9 ON R_PT_DT_FM_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_DT_FM_D_10 ON R_PT_DT_FM_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_TRANSPLANT_CB_D;
create table R_PT_TRANSPLANT_CB_D
(
   TRANSPLANT_CB_D_ID   VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   LEAF_TYPE_CD         VARCHAR(32),
   LEAF_TYPE_NAME       VARCHAR(64),
   LEAF_VARIETY_CD      VARCHAR(32),
   LEAF_VARIETY_NAME    VARCHAR(64),
   TRANSPLANT_QTY       DECIMAL(12),
   TRANSPLANT_AREA      DECIMAL(24,6)          default 0,
   TY_AREA              DECIMAL(24,6)          default 0,
   DY_AREA              DECIMAL(24,6)          default 0,
   UNDER_FILM_AREA      DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   AVG_PLANT_DENSITY    DECIMAL(24,6)          default 0,
   CENSUS_QTY           DECIMAL(24,6)            default 0,
   CENSUS_AREA          DECIMAL(24,6)            default 0,
   DIFF_TRANSPLANT_AREA DECIMAL(24,6)          default 0, --分类移栽面积（黑龙江）
   DEEP_TRANSPLANT_AREA DECIMAL(24,6)          default 0, --深栽埋茎面积(黑龙江)
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   constraint PK_R_PT_TRANSPLANT_CB_D primary key (TRANSPLANT_CB_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_TRANSPLANT_CB_D_1 ON R_PT_TRANSPLANT_CB_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_CB_D_2 ON R_PT_TRANSPLANT_CB_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_CB_D_3 ON R_PT_TRANSPLANT_CB_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_CB_D_4 ON R_PT_TRANSPLANT_CB_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_CB_D_5 ON R_PT_TRANSPLANT_CB_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_TRANSPLANT_DV_D;
create table R_PT_TRANSPLANT_DV_D
(
   TRANSPLANT_DV_D_ID   VARCHAR(32)            not null,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   LEAF_TYPE_CD         VARCHAR(32),
   LEAF_TYPE_NAME       VARCHAR(64),
   LEAF_VARIETY_CD      VARCHAR(32),
   LEAF_VARIETY_NAME    VARCHAR(64),
   TRANSPLANT_QTY       DECIMAL(12),
   TRANSPLANT_AREA      DECIMAL(24,6)          default 0,
   TY_AREA              DECIMAL(24,6)          default 0,
   DY_AREA              DECIMAL(24,6)          default 0,
   UNDER_FILM_AREA      DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   AVG_PLANT_DENSITY    DECIMAL(24,6)          default 0,
   CENSUS_QTY           DECIMAL(24,6)          default 0,
   CENSUS_AREA          DECIMAL(24,6)          default 0,
   DIFF_TRANSPLANT_AREA DECIMAL(24,6)          default 0, --分类移栽面积（黑龙江）
   DEEP_TRANSPLANT_AREA DECIMAL(24,6)          default 0, --深栽埋茎面积(黑龙江)
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   constraint PK_R_PT_TRANSPLANT_DV_D primary key (TRANSPLANT_DV_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_TRANSPLANT_DV_D_1 ON R_PT_TRANSPLANT_DV_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_DV_D_2 ON R_PT_TRANSPLANT_DV_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_DV_D_3 ON R_PT_TRANSPLANT_DV_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_DV_D_4 ON R_PT_TRANSPLANT_DV_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_DV_D_5 ON R_PT_TRANSPLANT_DV_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_DV_D_6 ON R_PT_TRANSPLANT_DV_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_DV_D_7 ON R_PT_TRANSPLANT_DV_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_DV_D_8 ON R_PT_TRANSPLANT_DV_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_DV_D_9 ON R_PT_TRANSPLANT_DV_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_DV_D_10 ON R_PT_TRANSPLANT_DV_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------


--PT_4.1.移栽阶段情况表（按烟农、日期）
--drop table R_PT_TRANSPLANT_FM_D;
create table R_PT_TRANSPLANT_FM_D
(
   TRANSPLANT_FM_D_ID VARCHAR(32)            not null,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   LEAF_TYPE_CD         VARCHAR(32),
   LEAF_TYPE_NAME       VARCHAR(64),
   LEAF_VARIETY_CD      VARCHAR(32),
   LEAF_VARIETY_NAME    VARCHAR(64),
   TRANSPLANT_QTY       DECIMAL(12),
   TRANSPLANT_AREA      DECIMAL(24,6)          default 0,
   TY_AREA              DECIMAL(24,6)          default 0,
   DY_AREA              DECIMAL(24,6)          default 0,
   UNDER_FILM_AREA      DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   AVG_PLANT_DENSITY    DECIMAL(24,6)          default 0,
   CENSUS_QTY           DECIMAL(24,6)          default 0,
   CENSUS_AREA          DECIMAL(24,6)          default 0,
   DIFF_TRANSPLANT_AREA DECIMAL(24,6)          default 0, --分类移栽面积（黑龙江）
   DEEP_TRANSPLANT_AREA DECIMAL(24,6)          default 0, --深栽埋茎面积(黑龙江)
   IS_AREA_TALLY        CHAR(1),     ---是否面积符合（湖南）
   IS_LOCATION_TALLY    CHAR(1),     ---否位置符合（湖南）
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   FARMER_ID            VARCHAR(32),
   FARMER_CD            VARCHAR(32),
   FARMER_NAME          VARCHAR(64),
   FIELD_BLOCK_ID       VARCHAR(32), 
   FIELD_BLOCK_CD       VARCHAR(32), 
   FIELD_BLOCK_NAME     VARCHAR(64),
   TECHNICIAN_ID        VARCHAR(32),
   TECHNICIAN_NAME      VARCHAR(64),
   constraint PK_R_PT_TRANSPLANT_FM_D primary key (TRANSPLANT_FM_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_TRANSPLANT_FM_D_1 ON R_PT_TRANSPLANT_FM_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_FM_D_2 ON R_PT_TRANSPLANT_FM_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_FM_D_3 ON R_PT_TRANSPLANT_FM_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_FM_D_4 ON R_PT_TRANSPLANT_FM_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_FM_D_5 ON R_PT_TRANSPLANT_FM_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_FM_D_6 ON R_PT_TRANSPLANT_FM_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_FM_D_7 ON R_PT_TRANSPLANT_FM_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_FM_D_8 ON R_PT_TRANSPLANT_FM_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_FM_D_9 ON R_PT_TRANSPLANT_FM_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_FM_D_10 ON R_PT_TRANSPLANT_FM_D(BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_TRANSPLANT_FM_D_11 ON R_PT_TRANSPLANT_FM_D(FARMER_CD,BUSINESS_DATE,BUSINESS_YEAR); 


------------------------------------------------------------
--
------------------------------------------------------------


--PT_3.4.供苗阶段情况表（按育苗点、日期）
--drop table R_PT_FOR_SEED_AB_D;
create table R_PT_FOR_SEED_AB_D
(
   FOR_SEED_AB_D_ID     VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   FOR_SEED_PLATE_QTY   DECIMAL(12),
   FOR_SEED_QTY         DECIMAL(12),
   TRANSPLANT_AREA      DECIMAL(24,6)          default 0,
   DESTORY_QTY          DECIMAL(12),
   DESTORY_AREA         DECIMAL(24,6)          default 0,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   AREA_CD              VARCHAR(32),
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32),
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32),
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32),
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32),
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32),
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32),
   GRUP_NAME            VARCHAR(128),
   GROW_POINT_ID        VARCHAR(32),
   GROW_POINT_CD        VARCHAR(32),
   GROW_POINT_NAME      VARCHAR(64),
   GROW_CANOPY_ID       VARCHAR(32),
   GROW_CANOPY_CD       VARCHAR(32),
   GROW_CANOPY_NAME     VARCHAR(64),
   GROW_PLATE_TYPE      VARCHAR(32),
   SUPPLY_STANDARD_EK   VARCHAR(32),
   CANOPY_TYPE            VARCHAR(32),
   CANOPY_TYPE_NAME       VARCHAR(64),
   GROW_TYPE              VARCHAR(32),
   GROW_TYPE_NAME         VARCHAR(64),
   LEAF_VARIETY_CD   VARCHAR(32),
   LEAF_VARIETY_NAME VARCHAR(64),
   TECHNICIAN_ID        VARCHAR(32),
   TECHNICIAN_NAME      VARCHAR(64),
   constraint PK_R_PT_FOR_SEED_AB_D primary key (FOR_SEED_AB_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_FOR_SEED_AB_D_1 ON R_PT_FOR_SEED_AB_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FOR_SEED_AB_D_2 ON R_PT_FOR_SEED_AB_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FOR_SEED_AB_D_3 ON R_PT_FOR_SEED_AB_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FOR_SEED_AB_D_4 ON R_PT_FOR_SEED_AB_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_FOR_SEED_AB_D_5 ON R_PT_FOR_SEED_AB_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------


--PT_3.2.烟叶苗期管理情况(按育苗点、按日期、当前状态值）
--drop table R_PT_MQGL_NOW_AB_D;
create table R_PT_MQGL_NOW_AB_D
(
   MQGL_NOW_AB_D_ID     VARCHAR(32)            not null,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   AREA_CD              VARCHAR(32),
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32),
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32),
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32),
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32),
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32),
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32),
   GRUP_NAME            VARCHAR(128),
   GROW_POINT_ID        VARCHAR(32),
   GROW_POINT_CD        VARCHAR(32),
   GROW_POINT_NAME      VARCHAR(64),
   GROW_CANOPY_ID       VARCHAR(32),
   GROW_CANOPY_CD       VARCHAR(32),
   GROW_CANOPY_NAME     VARCHAR(64),
   CANOPY_TYPE            VARCHAR(32),
   CANOPY_TYPE_NAME       VARCHAR(64),
   GROW_TYPE              VARCHAR(32),
   GROW_TYPE_NAME         VARCHAR(64),
   LEAF_VARIETY_CD   VARCHAR(32),
   LEAF_VARIETY_NAME VARCHAR(64), 
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   EMERGE_QTY           DECIMAL(12),
   EMERGE_AREA          DECIMAL(24,6)          default 0,
   S_CROSS_QTY          DECIMAL(12),
   S_CROSS_AREA         DECIMAL(24,6)          default 0,
   B_CROSS_QTY          DECIMAL(12),
   B_CROSS_AREA         DECIMAL(24,6)          default 0,
   THISPERIOD_QTY       DECIMAL(12),
   THISPERIOD_AREA      DECIMAL(24,6)          default 0,
   ONE_CLIP_QTY         DECIMAL(12),
   ONE_CLIP_AREA        DECIMAL(24,6)          default 0,
   TWO_CLIP_QTY         DECIMAL(12),
   TWO_CLIP_AREA        DECIMAL(24,6)          default 0,
   TRE_CLIP_QTY         DECIMAL(12),
   TRE_CLIP_AREA        DECIMAL(24,6)          default 0,
   FOUR_CLIP_QTY        DECIMAL(12),
   FOUR_CLIP_AREA       DECIMAL(24,6)          default 0,
   SEED_QTY             DECIMAL(12),
   SEED_AREA            DECIMAL(24,6)          default 0,
   TECHNICIAN_ID        VARCHAR(32),
   TECHNICIAN_NAME      VARCHAR(64),
   constraint PK_R_PT_MQGL_NOW_AB_D primary key (MQGL_NOW_AB_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_MQGL_NOW_AB_D_1 ON R_PT_MQGL_NOW_AB_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_MQGL_NOW_AB_D_2 ON R_PT_MQGL_NOW_AB_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_MQGL_NOW_AB_D_3 ON R_PT_MQGL_NOW_AB_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_MQGL_NOW_AB_D_4 ON R_PT_MQGL_NOW_AB_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_MQGL_NOW_AB_D_5 ON R_PT_MQGL_NOW_AB_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------


--PT_3.2.烟叶苗期管理情况(按育苗点、按日期、增量加工值）
--drop table R_PT_MQGL_INC_AB_D;
create table R_PT_MQGL_INC_AB_D
(
   MQGL_INC_AB_D_ID     VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   EMERGE_QTY           DECIMAL(12),
   EMERGE_AREA          DECIMAL(24,6)          default 0,
   SEED_QTY             DECIMAL(12),
   SEED_AREA            DECIMAL(24,6)          default 0,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   AREA_CD              VARCHAR(32),
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32),
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32),
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32),
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32),
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32),
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32),
   GRUP_NAME            VARCHAR(128),
   GROW_POINT_ID        VARCHAR(32),
   GROW_POINT_CD        VARCHAR(32),
   GROW_POINT_NAME      VARCHAR(64),
   GROW_CANOPY_ID       VARCHAR(32),
   GROW_CANOPY_CD       VARCHAR(32),
   GROW_CANOPY_NAME     VARCHAR(64),
   CANOPY_TYPE            VARCHAR(32),
   CANOPY_TYPE_NAME       VARCHAR(64),
   GROW_TYPE              VARCHAR(32),
   GROW_TYPE_NAME         VARCHAR(64),
   LEAF_VARIETY_CD   VARCHAR(32),
   LEAF_VARIETY_NAME VARCHAR(64),
   TECHNICIAN_ID        VARCHAR(32),
   TECHNICIAN_NAME      VARCHAR(64),
   constraint PK_R_PT_MQGL_INC_AB_D primary key (MQGL_INC_AB_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_MQGL_INC_AB_D_1 ON R_PT_MQGL_INC_AB_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_MQGL_INC_AB_D_2 ON R_PT_MQGL_INC_AB_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_MQGL_INC_AB_D_3 ON R_PT_MQGL_INC_AB_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_MQGL_INC_AB_D_4 ON R_PT_MQGL_INC_AB_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_MQGL_INC_AB_D_5 ON R_PT_MQGL_INC_AB_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------



--PT_3.1.育苗播种情况表（按育苗点、日期、区分棚类型品种方式）
--drop table R_PT_GROW_AB_D;
create table R_PT_GROW_AB_D
(
   GROW_AB_D_ID         VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   CANOPY_TYPE          VARCHAR(32),
   CANOPY_TYPE_NAME     VARCHAR(64),
   GROW_TYPE            VARCHAR(32),
   GROW_TYPE_NAME       VARCHAR(64),
   GROW_PLATE_TYPE      VARCHAR(32),
   SUPPLY_STANDARD_EK   VARCHAR(32),
   LEAF_VARIETY_CD VARCHAR(32),
   LEAF_VARIETY_NAME VARCHAR(64),
   GROW_PLATE_QTY       DECIMAL(12),
   GROW_QTY             DECIMAL(12),
   MACHINE_GROW_QTY     DECIMAL(12),
   TRANSPLANT_AREA      DECIMAL(24,6)          default 0,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   AREA_CD              VARCHAR(32),
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32),
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32),
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32),
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32),
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32),
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32),
   GRUP_NAME            VARCHAR(128),
   GROW_POINT_ID        VARCHAR(32),
   GROW_POINT_CD        VARCHAR(32),
   GROW_POINT_NAME      VARCHAR(64),
   GROW_CANOPY_ID       VARCHAR(32),
   GROW_CANOPY_CD       VARCHAR(32),
   GROW_CANOPY_NAME     VARCHAR(64),
   TECHNICIAN_ID        VARCHAR(32),
   TECHNICIAN_NAME      VARCHAR(64),
   constraint PK_R_PT_GROW_AB_D primary key (GROW_AB_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_GROW_AB_D_1 ON R_PT_GROW_AB_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_GROW_AB_D_2 ON R_PT_GROW_AB_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_GROW_AB_D_3 ON R_PT_GROW_AB_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_GROW_AB_D_4 ON R_PT_GROW_AB_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_GROW_AB_D_5 ON R_PT_GROW_AB_D(BUSINESS_DATE,BUSINESS_YEAR);



------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_VELUM_CB_D;
create table R_PT_VELUM_CB_D
(
   VELUM_CB_D_ID        VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   VELUM_AREA           DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   LAND_MEMBRANE_WGHT   DECIMAL(24,6)          default 0,
   TOP_MEMBRANE_AREA    DECIMAL(24,6)          default 0,
   BOTH_SIDE_AREA       DECIMAL(24,6)          default 0,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   constraint PK_R_PT_VELUM_CB_D primary key (VELUM_CB_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_VELUM_CB_D_1 ON R_PT_VELUM_CB_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_CB_D_2 ON R_PT_VELUM_CB_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_CB_D_3 ON R_PT_VELUM_CB_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_CB_D_4 ON R_PT_VELUM_CB_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_CB_D_5 ON R_PT_VELUM_CB_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_VELUM_DV_D;
create table R_PT_VELUM_DV_D
(
   VELUM_DV_D_ID        VARCHAR(32)            not null,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   VELUM_AREA           DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   LAND_MEMBRANE_WGHT   DECIMAL(24,6)          default 0,
   TOP_MEMBRANE_AREA    DECIMAL(24,6)          default 0,
   BOTH_SIDE_AREA       DECIMAL(24,6)          default 0,
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   constraint PK_R_PT_VELUM_DV_D primary key (VELUM_DV_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_VELUM_DV_D_1 ON R_PT_VELUM_DV_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_DV_D_2 ON R_PT_VELUM_DV_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_DV_D_3 ON R_PT_VELUM_DV_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_DV_D_4 ON R_PT_VELUM_DV_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_DV_D_5 ON R_PT_VELUM_DV_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_DV_D_6 ON R_PT_VELUM_DV_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_DV_D_7 ON R_PT_VELUM_DV_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_DV_D_8 ON R_PT_VELUM_DV_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_DV_D_9 ON R_PT_VELUM_DV_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_DV_D_10 ON R_PT_VELUM_DV_D(BUSINESS_DATE,BUSINESS_YEAR);

------------------------------------------------------------
--
------------------------------------------------------------


--PT_1.3盖膜情况表（按烟农、日期）
--drop table R_PT_VELUM_FM_D;
create table R_PT_VELUM_FM_D
(
   VELUM_FM_D_ID        VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   VELUM_AREA           DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   LAND_MEMBRANE_WGHT   DECIMAL(24,6)          default 0,
   TOP_MEMBRANE_AREA    DECIMAL(24,6)          default 0,
   BOTH_SIDE_AREA       DECIMAL(24,6)          default 0,
   FARMER_ID            VARCHAR(32),
   FARMER_CD            VARCHAR(32),
   FARMER_NAME          VARCHAR(64),
   FIELD_BLOCK_ID       VARCHAR(32),
   FIELD_BLOCK_CD       VARCHAR(32),
   FIELD_BLOCK_NAME     VARCHAR(64),
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   TECHNICIAN_ID        VARCHAR(32),
   TECHNICIAN_NAME      VARCHAR(64),
   constraint PK_R_PT_VELUM_FM_D primary key (VELUM_FM_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_VELUM_FM_D_1 ON R_PT_VELUM_FM_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_FM_D_2 ON R_PT_VELUM_FM_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_FM_D_3 ON R_PT_VELUM_FM_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_FM_D_4 ON R_PT_VELUM_FM_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_FM_D_5 ON R_PT_VELUM_FM_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_FM_D_6 ON R_PT_VELUM_FM_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_FM_D_7 ON R_PT_VELUM_FM_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_FM_D_8 ON R_PT_VELUM_FM_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_FM_D_9 ON R_PT_VELUM_FM_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_FM_D_10 ON R_PT_VELUM_FM_D(BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_VELUM_FM_D_11 ON R_PT_VELUM_FM_D(FARMER_CD,BUSINESS_DATE,BUSINESS_YEAR); 

------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_PREPAR_CB_D;
create table R_PT_PREPAR_CB_D
(
   PREPAR_CB_D_ID       VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   PREPAR_AREA          DECIMAL(24,6)          default 0,
   MACHINE_PREPAR_AREA  DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   PREPAR_TYPE          VARCHAR(32),
   PREPAR_QTY           DECIMAL(12),
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   constraint PK_R_PT_PREPAR_CB_D primary key (PREPAR_CB_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_PREPAR_CB_D_1 ON R_PT_PREPAR_CB_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_CB_D_2 ON R_PT_PREPAR_CB_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_CB_D_3 ON R_PT_PREPAR_CB_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_CB_D_4 ON R_PT_PREPAR_CB_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_CB_D_5 ON R_PT_PREPAR_CB_D(BUSINESS_DATE,BUSINESS_YEAR); 

------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_PREPAR_DV_D;
create table R_PT_PREPAR_DV_D
(
   PREPAR_DV_D_ID       VARCHAR(32)            not null,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   PREPAR_AREA          DECIMAL(24,6)          default 0,
   MACHINE_PREPAR_AREA  DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   PREPAR_TYPE          VARCHAR(32),
   PREPAR_QTY           DECIMAL(12),
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   constraint PK_R_PT_PREPAR_DV_D primary key (PREPAR_DV_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_PREPAR_DV_D_1 ON R_PT_PREPAR_DV_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_DV_D_2 ON R_PT_PREPAR_DV_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_DV_D_3 ON R_PT_PREPAR_DV_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_DV_D_4 ON R_PT_PREPAR_DV_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_DV_D_5 ON R_PT_PREPAR_DV_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_DV_D_6 ON R_PT_PREPAR_DV_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_DV_D_7 ON R_PT_PREPAR_DV_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_DV_D_8 ON R_PT_PREPAR_DV_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_DV_D_9 ON R_PT_PREPAR_DV_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_DV_D_10 ON R_PT_PREPAR_DV_D(BUSINESS_DATE,BUSINESS_YEAR);



------------------------------------------------------------
--
------------------------------------------------------------


--PT_1.2.起垄阶段情况表（按烟农、日期）
--drop table R_PT_PREPAR_FM_D;
create table R_PT_PREPAR_FM_D
(
   PREPAR_FM_D_ID       VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   PREPAR_AREA          DECIMAL(24,6)          default 0,
   MACHINE_PREPAR_AREA  DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   PREPAR_TYPE          VARCHAR(32),
   PREPAR_QTY           DECIMAL(12),
   FARMER_ID            VARCHAR(32),
   FARMER_CD            VARCHAR(32),
   FARMER_NAME          VARCHAR(64),
   FIELD_BLOCK_ID       VARCHAR(32),
   FIELD_BLOCK_CD       VARCHAR(32),
   FIELD_BLOCK_NAME     VARCHAR(64),
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   TECHNICIAN_ID        VARCHAR(32),
   TECHNICIAN_NAME      VARCHAR(64),
   constraint PK_R_PT_PREPAR_FM_D primary key (PREPAR_FM_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_PREPAR_FM_D_1 ON R_PT_PREPAR_FM_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_FM_D_2 ON R_PT_PREPAR_FM_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_FM_D_3 ON R_PT_PREPAR_FM_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_FM_D_4 ON R_PT_PREPAR_FM_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_FM_D_5 ON R_PT_PREPAR_FM_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_FM_D_6 ON R_PT_PREPAR_FM_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_FM_D_7 ON R_PT_PREPAR_FM_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_FM_D_8 ON R_PT_PREPAR_FM_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_FM_D_9 ON R_PT_PREPAR_FM_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_FM_D_10 ON R_PT_PREPAR_FM_D(BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PREPAR_FM_D_11 ON R_PT_PREPAR_FM_D(FARMER_CD,BUSINESS_DATE,BUSINESS_YEAR); 

------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_PLOUGH_CB_D;
create table R_PT_PLOUGH_CB_D
(
   PLOUGH_CB_D_ID       VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   PLOUGH_AREA          DECIMAL(24,6)          default 0,
   CLEAN_AREA           DECIMAL(24,6)          default 0,
   MACHINE_PLOUGH_AREA  DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   constraint PK_R_PT_PLOUGH_CB_D primary key (PLOUGH_CB_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_PLOUGH_CB_D_1 ON R_PT_PLOUGH_CB_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_CB_D_2 ON R_PT_PLOUGH_CB_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_CB_D_3 ON R_PT_PLOUGH_CB_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_CB_D_4 ON R_PT_PLOUGH_CB_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_CB_D_5 ON R_PT_PLOUGH_CB_D(BUSINESS_DATE,BUSINESS_YEAR);


------------------------------------------------------------
--
------------------------------------------------------------


--drop table R_PT_PLOUGH_DV_D;
create table R_PT_PLOUGH_DV_D
(
   PLOUGH_DV_D_ID       VARCHAR(32)            not null,
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   PLOUGH_AREA          DECIMAL(24,6)          default 0,
   CLEAN_AREA           DECIMAL(24,6)          default 0,
   MACHINE_PLOUGH_AREA  DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   constraint PK_R_PT_PLOUGH_DV_D primary key (PLOUGH_DV_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_PLOUGH_DV_D_1 ON R_PT_PLOUGH_DV_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_DV_D_2 ON R_PT_PLOUGH_DV_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_DV_D_3 ON R_PT_PLOUGH_DV_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_DV_D_4 ON R_PT_PLOUGH_DV_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_DV_D_5 ON R_PT_PLOUGH_DV_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_DV_D_6 ON R_PT_PLOUGH_DV_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_DV_D_7 ON R_PT_PLOUGH_DV_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_DV_D_8 ON R_PT_PLOUGH_DV_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_DV_D_9 ON R_PT_PLOUGH_DV_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_DV_D_10 ON R_PT_PLOUGH_DV_D(BUSINESS_DATE,BUSINESS_YEAR);




------------------------------------------------------------
--
------------------------------------------------------------


--PT_1.1翻耕阶段情况表（按烟农、日期）
--drop table R_PT_PLOUGH_FM_D;
create table R_PT_PLOUGH_FM_D
(
   PLOUGH_FM_D_ID       VARCHAR(32)            not null,
   SEND_STATE           CHAR(1)                default '0',
   DATA_STATE           CHAR(1)                default '1',
   MODIFY_TIME          TIMESTAMP,
   SEND_TIME            TIMESTAMP,
   PACKAGE_TIME         TIMESTAMP,
   LAST_TIME            TIMESTAMP              default CURRENT TIMESTAMP,
   BUSINESS_YEAR        DECIMAL(4),
   BUSINESS_DATE        TIMESTAMP,
   PLOUGH_AREA          DECIMAL(24,6)          default 0,
   CLEAN_AREA           DECIMAL(24,6)          default 0,
   MACHINE_PLOUGH_AREA  DECIMAL(24,6)          default 0,
   PROPESS_AREA         DECIMAL(24,6)          default 0,
   FARMER_ID            VARCHAR(32),
   FARMER_CD            VARCHAR(32),
   FARMER_NAME          VARCHAR(64),
   FIELD_BLOCK_ID       VARCHAR(32),
   FIELD_BLOCK_CD       VARCHAR(32),
   FIELD_BLOCK_NAME     VARCHAR(64),
   ORG_CD               VARCHAR(32)            default '0',
   ORG_NAME             VARCHAR(128),
   PROV                 VARCHAR(32)            default '0',
   PROV_NAME            VARCHAR(128),
   CITC                 VARCHAR(32)            default '0',
   CITC_NAME            VARCHAR(128),
   COUC                 VARCHAR(32)            default '0',
   COUC_NAME            VARCHAR(128),
   STAC                 VARCHAR(32)            default '0',
   STAC_NAME            VARCHAR(128),
   SSTC                 VARCHAR(32)            default '0',
   SSTC_NAME            VARCHAR(128),
   SLIN                 VARCHAR(32)            default '0',
   SLIN_NAME            VARCHAR(128),
   AREA_CD              VARCHAR(32)            default '0',
   AREA_NAME            VARCHAR(128),
   AREA_PROV            VARCHAR(32)            default '0',
   AREA_PROV_NAME       VARCHAR(128),
   AREA_CITC            VARCHAR(32)            default '0',
   AREA_CITC_NAME       VARCHAR(128),
   AREA_COUC            VARCHAR(32)            default '0',
   AREA_COUC_NAME       VARCHAR(128),
   AREA_TOWN            VARCHAR(32)            default '0',
   TOWN_NAME            VARCHAR(128),
   AREA_VAGE            VARCHAR(32)            default '0',
   VAGE_NAME            VARCHAR(128),
   AREA_GRUP            VARCHAR(32)            default '0',
   GRUP_NAME            VARCHAR(128),
   TECHNICIAN_ID        VARCHAR(32),
   TECHNICIAN_NAME      VARCHAR(64),
   constraint PK_PT_PLOUGH_FM_D primary key (PLOUGH_FM_D_ID)
)
IN DCCELL_SPACE INDEX IN INDEX_SPACE
PARTITION BY RANGE(BUSINESS_YEAR)
(
PART PART2010 STARTING(2010) INCLUSIVE ENDING(2010) INCLUSIVE,
PART PART2011 STARTING(2011) INCLUSIVE ENDING(2011) INCLUSIVE,
PART PART2012 STARTING(2012) INCLUSIVE ENDING(2012) INCLUSIVE,
PART PART2013 STARTING(2013) INCLUSIVE ENDING(2013) INCLUSIVE,
PART PART2014 STARTING(2014) INCLUSIVE ENDING(2014) INCLUSIVE,
PART PART2015 STARTING(2015) INCLUSIVE ENDING(2015) INCLUSIVE,
PART PART2016 STARTING(2016) INCLUSIVE ENDING(2016) INCLUSIVE,
PART PART2017 STARTING(2017) INCLUSIVE ENDING(2017) INCLUSIVE,
PART PART2018 STARTING(2018) INCLUSIVE ENDING(2018) INCLUSIVE,
PART PART2019 STARTING(2019) INCLUSIVE ENDING(2019) INCLUSIVE,
PART PART2020 STARTING(2020) INCLUSIVE ENDING(2020) INCLUSIVE,
PART PART2021 STARTING(2021) INCLUSIVE ENDING(2021) INCLUSIVE,
PART PART2022 STARTING(2022) INCLUSIVE ENDING(2022) INCLUSIVE,
PART PART2023 STARTING(2023) INCLUSIVE ENDING(2023) INCLUSIVE,
PART PART2024 STARTING(2024) INCLUSIVE ENDING(2024) INCLUSIVE,
PART PART2025 STARTING(2025) INCLUSIVE ENDING(2025) INCLUSIVE,
PART PART2026 STARTING(2026) INCLUSIVE ENDING(2026) INCLUSIVE,
PART PART2027 STARTING(2027) INCLUSIVE ENDING(2027) INCLUSIVE,
PART PART2028 STARTING(2028) INCLUSIVE ENDING(2028) INCLUSIVE,
PART PART2029 STARTING(2029) INCLUSIVE ENDING(2029) INCLUSIVE,
PART PART2030 STARTING(2030) INCLUSIVE ENDING(2030) INCLUSIVE
);

CREATE INDEX I_PT_PLOUGH_FM_D_1 ON R_PT_PLOUGH_FM_D(AREA_CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_FM_D_2 ON R_PT_PLOUGH_FM_D(AREA_COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_FM_D_3 ON R_PT_PLOUGH_FM_D(AREA_TOWN,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_FM_D_4 ON R_PT_PLOUGH_FM_D(AREA_VAGE,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_FM_D_5 ON R_PT_PLOUGH_FM_D(AREA_GRUP,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_FM_D_6 ON R_PT_PLOUGH_FM_D(CITC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_FM_D_7 ON R_PT_PLOUGH_FM_D(COUC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_FM_D_8 ON R_PT_PLOUGH_FM_D(STAC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_FM_D_9 ON R_PT_PLOUGH_FM_D(SSTC,BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_FM_D_10 ON R_PT_PLOUGH_FM_D(BUSINESS_DATE,BUSINESS_YEAR);
CREATE INDEX I_PT_PLOUGH_FM_D_11 ON R_PT_PLOUGH_FM_D(FARMER_CD,BUSINESS_DATE,BUSINESS_YEAR); 



