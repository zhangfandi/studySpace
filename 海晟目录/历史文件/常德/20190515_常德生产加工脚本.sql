--翻耕加工表增加常德梳理出来的相关字段信息
alter table R_PT_PLOUGH_FM_D add column IS_DEPTH_STAND_NAME VARCHAR(32);
alter table R_PT_PLOUGH_FM_D add column IS_OPEN_TRENCH_NAME VARCHAR(32);
alter table R_PT_PLOUGH_FM_D add column WORK_EFFECT_EVAL_NAME VARCHAR(32);
alter table R_PT_PLOUGH_FM_D add column IS_PROPESS_NAME VARCHAR(32);

--移栽加工表增加常德梳理出来的相关字段信息
alter table R_PT_TRANSPLANT_FM_D add column WORK_EFFECT_EVAL_NAME VARCHAR(32);
alter table R_PT_TRANSPLANT_FM_D add column LINE_DISTANCE_NAME VARCHAR(32);
alter table R_PT_TRANSPLANT_FM_D add column ONE_DISTANCE_NAME VARCHAR(32);

--起垄加工表增加常德梳理出来的相关字段信息
alter table R_PT_PREPAR_FM_D add column IS_HIGH_STAND_NAME VARCHAR(32);
alter table R_PT_PREPAR_FM_D add column WORK_EFFECT_EVAL_NAME VARCHAR(32);
alter table R_PT_PREPAR_FM_D add column IS_PROPESS_NAME VARCHAR(32);

--覆膜加工表增加常德梳理出来的相关字段信息
alter table R_PT_VELUM_FM_D add column VELUM_EFFTET_NAME VARCHAR(32);
alter table R_PT_VELUM_FM_D add column WORK_EFFECT_EVAL_NAME VARCHAR(32);

--大田植保加工表增加常德梳理出来的相关字段信息
alter table R_PT_DT_FM_D add column BEAT_TOP_OPPORT_NAME VARCHAR(32);
alter table R_PT_DT_FM_D add column BEAT_TOP_LEAF_QTY_EK_NAME VARCHAR(32);
alter table R_PT_DT_FM_D add column WORK_EFFECT_EVAL_NAME VARCHAR(32);


--创建烟农数据采集与督导结果关系表
  CREATE TABLE
    DCCELL.R_PT_DC_WC_RELA_D
    (
        RELA_D_ID VARCHAR(32) PRIMARY Key NOT NULL,
        BUSINESS_YEAR     DECIMAL(4,0),
        STAGE_NAME        VARCHAR(64),
        FARMER_ID         VARCHAR(32),
        FARMER_CD         VARCHAR(32),
        FARMER_NAME       VARCHAR(64),
        DC_CLT_OBJ_ID     VARCHAR(32),
        DC_CLT_OBJ_CD     VARCHAR(32),
        DC_CLT_OBJ_NAME   VARCHAR(64),
        TECHNICIAN_ID     VARCHAR(32),
        TECHNICIAN_NAME   VARCHAR(64),
        BUSINESS_DATE     TIMESTAMP,
        WC_DATE           TIMESTAMP,
        WC_ORG_CD         VARCHAR(32),
        WC_ORG_NAME       VARCHAR(64),
        WC_PSN_ID         VARCHAR(32),
        WC_PSN_NAME       VARCHAR(64),
        WC_PROBLEM        VARCHAR(255),
        WC_IMPORVE_METHOD VARCHAR(255),
        SEND_STATE CHARACTER(1) DEFAULT '0',
        DATA_STATE CHARACTER(1) DEFAULT '1',
        ORG_CD VARCHAR(32) DEFAULT '0',
        ORG_NAME VARCHAR(128),
        PROV VARCHAR(32) DEFAULT '0',
        PROV_NAME VARCHAR(128),
        CITC VARCHAR(32) DEFAULT '0',
        CITC_NAME VARCHAR(128),
        COUC VARCHAR(32) DEFAULT '0',
        COUC_NAME VARCHAR(128),
        STAC VARCHAR(32) DEFAULT '0',
        STAC_NAME VARCHAR(128),
        SSTC VARCHAR(32) DEFAULT '0',
        SSTC_NAME VARCHAR(128),
        SLIN VARCHAR(32) DEFAULT '0',
        SLIN_NAME VARCHAR(128),                
        AREA_CD VARCHAR(32) DEFAULT '0',
        AREA_NAME VARCHAR(128),
        AREA_PROV VARCHAR(32) DEFAULT '0',
        AREA_PROV_NAME VARCHAR(128),
        AREA_CITC VARCHAR(32) DEFAULT '0',
        AREA_CITC_NAME VARCHAR(128),
        AREA_COUC VARCHAR(32) DEFAULT '0',
        AREA_COUC_NAME VARCHAR(128),
        AREA_TOWN VARCHAR(32) DEFAULT '0',
        TOWN_NAME VARCHAR(128),
        AREA_VAGE VARCHAR(32) DEFAULT '0',
        VAGE_NAME VARCHAR(128),
        AREA_GRUP VARCHAR(32) DEFAULT '0',
        GRUP_NAME VARCHAR(128),
        CLEAN_AREA DECIMAL(24,6) DEFAULT 0,
        CNTY VARCHAR(32) DEFAULT '0',
        CNTY_NAME VARCHAR(128),
        CNTY_UNIQUE VARCHAR(32) DEFAULT '0',
        PROV_UNIQUE VARCHAR(32) DEFAULT '0',
        CITC_UNIQUE VARCHAR(32) DEFAULT '0',
        COUC_UNIQUE VARCHAR(32) DEFAULT '0',
        STAC_UNIQUE VARCHAR(32) DEFAULT '0',
        SSTC_UNIQUE VARCHAR(32) DEFAULT '0',
        SLIN_UNIQUE VARCHAR(32) DEFAULT '0',
        AREA_CNTY VARCHAR(32) DEFAULT '0',
        AREA_CNTY_NAME VARCHAR(128),
        PACKAGE_TIME TIMESTAMP,
        MODIFY_TIME TIMESTAMP,
        SEND_TIME TIMESTAMP,
        LAST_TIME TIMESTAMP DEFAULT CURRENT Timestamp        
    ) IN DCCELL_SPACE_32K INDEX IN INDEX_SPACE;
	
	
--DROP VIEW TSO.V_PT_BIG_PTSX;
CREATE VIEW TSO.V_PT_BIG_PTSX
  AS
 SELECT 
DATA_STORE_BASE_TBL_ID AS BIG_PTSX_ID,--ID
CLT_OBJ_ID AS FARMER_ID,--对应烟农ID
CLT_OBJ_CD AS FARMER_CD,--对应烟农CD
CLT_OBJ_NAME AS FARMER_NAME,--对应烟农名称
FEEDBACK_DATE AS BUSINESS_DATE,--采集日期
PT_YEAR AS BUSINESS_YEAR,--生产年度
D1 AS BEGIN_DATE,--开始日期
D2 AS END_DATE,--结束日期
N1 AS PTSX_AREA,--培土面积
C1 AS IS_HIGH_STAND,--垄高高度是否达到标准
C1.ENUM_NAME AS IS_HIGH_STAND_NAME,--垄高高度是否达到标准_显示名称
C2 AS WORK_EFFECT_EVAL,--实施效果评价
C2.ENUM_NAME AS WORK_EFFECT_EVAL_NAME,--实施效果评价_显示名称
C9.STATION_UNIQUE_CD AS ORG_CD,--组织单位
C9.DIVISION_UNIQUE_CD AS AREA_CD,--行政区划,
B1.PROV,
B1.PROV_NAME,
B1.CITC,
B1.CITC_NAME,
B1.COUC,
B1.COUC_NAME,
B1.STAC,
B1.STAC_NAME,
B1.SSTC,
B1.SSTC_NAME,
B1.SLIN,
B1.SLIN_NAME,
B1.ORG_NAME,
B2.AREA_PROV,
B2.AREA_PROV_NAME,
B2.AREA_CITC,
B2.AREA_CITC_NAME,
B2.AREA_COUC,
B2.AREA_COUC_NAME,
B2.AREA_TOWN,
B2.TOWN_NAME,
B2.AREA_VAGE,
B2.VAGE_NAME,
B2.AREA_GRUP,
B2.GRUP_NAME,
B2.ORG_NAME AS AREA_NAME,
 A.DATA_STATE  
  FROM PT_DC_STAT_DATA_E A 
      LEFT JOIN PT_IX_ENUM_DATA C2 ON C2.ENUM_CD = A.C2 AND C2.IDX_ID = '8a3c345369b94fd80169b9b9801e00a9' AND C2.DATA_STATE='1'
      LEFT JOIN PT_IX_ENUM_DATA C1 ON C1.ENUM_CD = A.C1 AND C1.IDX_ID = '8a3c36db4fd1aee7014ff31467e9000a' AND C1.DATA_STATE='1'
      LEFT JOIN CM_PM_FRM_FUND C9 ON C9.FRM_FUND_UNIQUE_ID = A.CLT_OBJ_ID AND C9.BIZ_YEAR = A.PT_YEAR AND C9.DATA_STATE = '1'
      LEFT JOIN B_ORG B1 ON C9.STATION_UNIQUE_CD = B1.ORG_UNIQUE_CD 
      LEFT JOIN B_DIVISION B2 ON  C9.DIVISION_UNIQUE_CD  = B2.DIVISION_UNIQUE_CD  
 WHERE 1=1 
   AND A.BILL_NO = 'TJHNCD0000000009'
   AND A.CHECK_STATE = '1'   
 ;
 
 --DROP NICKNAME DCCELL.V_PT_BIG_PTSX;
CREATE NICKNAME DCCELL.V_PT_BIG_PTSX FOR TSOSERVER.TSO.V_PT_BIG_PTSX;
 
 
--DROP VIEW TSO.V_PT_DT_FM_D;
CREATE VIEW TSO.V_PT_DT_FM_D
  AS
 SELECT 
DATA_STORE_BASE_TBL_ID AS DT_FM_D_ID,--ID
CLT_OBJ_ID AS FARMER_ID,--对应烟农ID
CLT_OBJ_CD AS FARMER_CD,--对应烟农CD
CLT_OBJ_NAME AS FARMER_NAME,--对应烟农名称
FEEDBACK_DATE AS BUSINESS_DATE,--采集日期
PT_YEAR AS BUSINESS_YEAR,--生产年度
D1 AS BEGIN_DATE,--开始日期
D2 AS END_DATE,--结束日期
N1 AS BEAT_TOP_AREA,--打顶面积
C1 AS BEAT_TOP_OPPORT,--打顶时机
C1.ENUM_NAME AS BEAT_TOP_OPPORT_NAME,--打顶时机_显示名称
C2 AS BEAT_TOP_LEAF_QTY_EK,--打顶后有效叶数
C2.ENUM_NAME AS BEAT_TOP_LEAF_QTY_EK_NAME,--打顶后有效叶数_显示名称
C3 AS WORK_EFFECT_EVAL,--实施效果评价
C3.ENUM_NAME AS WORK_EFFECT_EVAL_NAME,--实施效果评价_显示名称
C9.STATION_UNIQUE_CD AS ORG_CD,--组织单位
C9.DIVISION_UNIQUE_CD AS AREA_CD,--行政区划,
 A.DATA_STATE 
  FROM PT_DC_STAT_DATA_B A 
      LEFT JOIN PT_IX_ENUM_DATA C1 ON C1.ENUM_CD = A.C1 AND C1.IDX_ID = '8a3c34536a8cad24016a950d945b0053' AND C1.DATA_STATE='1'
      LEFT JOIN PT_IX_ENUM_DATA C2 ON C2.ENUM_CD = A.C2 AND C2.IDX_ID = '8a3c34536a8cad24016a950e7aa00057' AND C2.DATA_STATE='1'
      LEFT JOIN PT_IX_ENUM_DATA C3 ON C3.ENUM_CD = A.C3 AND C3.IDX_ID = '8a3c345369b94fd80169b9b9801e00a9' AND C3.DATA_STATE='1'
      LEFT JOIN CM_PM_FRM_FUND C9 ON C9.FRM_FUND_UNIQUE_ID = A.CLT_OBJ_ID AND C9.BIZ_YEAR = A.PT_YEAR AND C9.DATA_STATE = '1' 
 WHERE 1=1 
   AND A.BILL_NO = 'TJHNCD0000000015'
   AND A.CHECK_STATE = '1'   
 ;
 
 --DROP NICKNAME DCCELL.V_PT_DT_FM_D;
CREATE NICKNAME DCCELL.V_PT_DT_FM_D FOR TSOSERVER.TSO.V_PT_DT_FM_D;
 
 
 
--DROP VIEW TSO.V_PT_OPTM_STRU;
CREATE VIEW TSO.V_PT_OPTM_STRU
  AS
 SELECT 
DATA_STORE_BASE_TBL_ID AS OPTM_STRU_ID,--ID
CLT_OBJ_ID AS FARMER_ID,--对应烟农ID
CLT_OBJ_CD AS FARMER_CD,--对应烟农CD
CLT_OBJ_NAME AS FARMER_NAME,--对应烟农名称
FEEDBACK_DATE AS BUSINESS_DATE,--采集日期
PT_YEAR AS BUSINESS_YEAR,--生产年度
D1 AS BEGIN_DATE,--开始日期
D2 AS END_DATE,--结束日期
N1 AS OPTM_AREA,--优化结构面积
C1 AS GIVE_UP_BOTTOM,--打掉下部
C1.ENUM_NAME AS GIVE_UP_BOTTOM_NAME,--打掉下部_显示名称
C2 AS GIVE_UP_TOP,--弃采上部
C2.ENUM_NAME AS GIVE_UP_TOP_NAME,--弃采上部_显示名称
C3 AS WORK_EFFECT_EVAL,--实施效果评价
C3.ENUM_NAME AS WORK_EFFECT_EVAL_NAME,--实施效果评价_显示名称
C9.STATION_UNIQUE_CD AS ORG_CD,--组织单位
C9.DIVISION_UNIQUE_CD AS AREA_CD,--行政区划,
B1.PROV,
B1.PROV_NAME,
B1.CITC,
B1.CITC_NAME,
B1.COUC,
B1.COUC_NAME,
B1.STAC,
B1.STAC_NAME,
B1.SSTC,
B1.SSTC_NAME,
B1.SLIN,
B1.SLIN_NAME,
B1.ORG_NAME,
B2.AREA_PROV,
B2.AREA_PROV_NAME,
B2.AREA_CITC,
B2.AREA_CITC_NAME,
B2.AREA_COUC,
B2.AREA_COUC_NAME,
B2.AREA_TOWN,
B2.TOWN_NAME,
B2.AREA_VAGE,
B2.VAGE_NAME,
B2.AREA_GRUP,
B2.GRUP_NAME,
B2.ORG_NAME AS AREA_NAME,
 A.DATA_STATE  
  FROM PT_DC_STAT_DATA_G A 
      LEFT JOIN PT_IX_ENUM_DATA C2 ON C2.ENUM_CD = A.C2 AND C2.IDX_ID = '8a3c34536a8cad24016a950ccb18004f' AND C2.DATA_STATE='1'
      LEFT JOIN CM_PM_FRM_FUND C9 ON C9.FRM_FUND_UNIQUE_ID = A.CLT_OBJ_ID AND C9.BIZ_YEAR = A.PT_YEAR AND C9.DATA_STATE = '1'
      LEFT JOIN PT_IX_ENUM_DATA C3 ON C3.ENUM_CD = A.C3 AND C3.IDX_ID = '8a3c345369b94fd80169b9b9801e00a9' AND C3.DATA_STATE='1'
      LEFT JOIN PT_IX_ENUM_DATA C1 ON C1.ENUM_CD = A.C1 AND C1.IDX_ID = '8a3c34536a8cad24016a950c12d2004a' AND C1.DATA_STATE='1'
      LEFT JOIN B_ORG B1 ON C9.STATION_UNIQUE_CD = B1.ORG_UNIQUE_CD 
      LEFT JOIN B_DIVISION B2 ON  C9.DIVISION_UNIQUE_CD  = B2.DIVISION_UNIQUE_CD  
 WHERE 1=1 
   AND A.BILL_NO = 'TJHNCD0000000013'
   AND A.CHECK_STATE = '1'   
 ;
 
 --DROP NICKNAME DCCELL.V_PT_OPTM_STRU;
CREATE NICKNAME DCCELL.V_PT_OPTM_STRU FOR TSOSERVER.TSO.V_PT_OPTM_STRU;
 


--DROP VIEW TSO.V_PT_PLOUGH_FM_D;
CREATE VIEW TSO.V_PT_PLOUGH_FM_D
  AS
 SELECT 
DATA_STORE_BASE_TBL_ID AS PLOUGH_FM_D_ID,--ID
CLT_OBJ_ID AS FARMER_ID,--对应烟农ID
CLT_OBJ_CD AS FARMER_CD,--对应烟农CD
CLT_OBJ_NAME AS FARMER_NAME,--对应烟农名称
FEEDBACK_DATE AS BUSINESS_DATE,--采集日期
PT_YEAR AS BUSINESS_YEAR,--生产年度
D1 AS END_DATE,--结束日期
N1 AS PLOUGH_AREA,--翻耕面积
C1 AS IS_DEPTH_STAND,--翻耕深度是否达到标准
C1.ENUM_NAME AS IS_DEPTH_STAND_NAME,--翻耕深度是否达到标准_显示名称
C2 AS IS_OPEN_TRENCH,--是否打开腰围沟
C2.ENUM_NAME AS IS_OPEN_TRENCH_NAME,--是否打开腰围沟_显示名称
C3 AS IS_PROPESS,--是否专业化服务
C3.ENUM_NAME AS IS_PROPESS_NAME,--是否专业化服务_显示名称
C4 AS WORK_EFFECT_EVAL,--实施效果评价
C4.ENUM_NAME AS WORK_EFFECT_EVAL_NAME,--实施效果评价_显示名称
C5 AS SERV_ORG_ID,--服务队ID
C9.STATION_UNIQUE_CD AS ORG_CD,--组织单位
C9.DIVISION_UNIQUE_CD AS AREA_CD,--行政区划,
 A.DATA_STATE 
  FROM PT_DC_STAT_DATA_A A 
      LEFT JOIN PT_IX_ENUM_DATA C4 ON C4.ENUM_CD = A.C4  AND C4.IDX_ID = '8a3c345369b94fd80169b9b9801e00a9' AND C4.DATA_STATE='1'
      LEFT JOIN CM_PM_FRM_FUND C9 ON C9.FRM_FUND_UNIQUE_ID = A.CLT_OBJ_ID AND C9.BIZ_YEAR = A.PT_YEAR AND C9.DATA_STATE = '1'
      LEFT JOIN PT_IX_ENUM_DATA C3 ON C3.ENUM_CD = A.C3  AND C3.IDX_ID = '8a3c36db4fd1aee7014ff31467e9000a' AND C3.DATA_STATE='1'
      LEFT JOIN PT_IX_ENUM_DATA C1 ON C1.ENUM_CD = A.C1  AND C1.IDX_ID = '8a3c36db4fd1aee7014ff31467e9000a' AND C1.DATA_STATE='1'
      LEFT JOIN PT_IX_ENUM_DATA C2 ON C2.ENUM_CD = A.C2  AND C2.IDX_ID = '8a3c36db4fd1aee7014ff31467e9000a' AND C2.DATA_STATE='1' 
 WHERE 1=1 
   AND A.BILL_NO = 'TJHNCD0000000001'
   AND A.CHECK_STATE = '1'   
 ;
 
 --DROP NICKNAME DCCELL.V_PT_PLOUGH_FM_D;
CREATE NICKNAME DCCELL.V_PT_PLOUGH_FM_D FOR TSOSERVER.TSO.V_PT_PLOUGH_FM_D;
 
 
 
 --DROP VIEW TSO.V_PT_PREPAR_FM_D;
CREATE VIEW TSO.V_PT_PREPAR_FM_D
  AS
 SELECT 
DATA_STORE_BASE_TBL_ID AS PREPAR_FM_D_ID,--ID
CLT_OBJ_ID AS FARMER_ID,--对应烟农ID
CLT_OBJ_CD AS FARMER_CD,--对应烟农CD
CLT_OBJ_NAME AS FARMER_NAME,--对应烟农名称
FEEDBACK_DATE AS BUSINESS_DATE,--采集日期
PT_YEAR AS BUSINESS_YEAR,--生产年度
D1 AS END_DATE,--结束日期
N1 AS PREPAR_AREA,--起垄面积
C1 AS IS_HIGH_STAND,--起垄高度是否达到标准
C1.ENUM_NAME AS IS_HIGH_STAND_NAME,--起垄高度是否达到标准_显示名称
C2 AS IS_PROPESS,--是否专业化服务
C2.ENUM_NAME AS IS_PROPESS_NAME,--是否专业化服务_显示名称
C3 AS WORK_EFFECT_EVAL,--实施效果评价
C3.ENUM_NAME AS WORK_EFFECT_EVAL_NAME,--实施效果评价_显示名称
C4 AS SERV_ORG_ID,--服务队ID
C9.STATION_UNIQUE_CD AS ORG_CD,--组织单位
C9.DIVISION_UNIQUE_CD AS AREA_CD,--行政区划,
 A.DATA_STATE 
  FROM PT_DC_STAT_DATA_C A 
      LEFT JOIN PT_IX_ENUM_DATA C1 ON C1.ENUM_CD = A.C1  AND C1.IDX_ID = '8a3c36db4fd1aee7014ff31467e9000a' AND C1.DATA_STATE='1'
      LEFT JOIN PT_IX_ENUM_DATA C3 ON C3.ENUM_CD = A.C3  AND C3.IDX_ID = '8a3c345369b94fd80169b9b9801e00a9' AND C3.DATA_STATE='1'
      LEFT JOIN CM_PM_FRM_FUND C9 ON C9.FRM_FUND_UNIQUE_ID = A.CLT_OBJ_ID AND C9.BIZ_YEAR = A.PT_YEAR AND C9.DATA_STATE = '1'
      LEFT JOIN PT_IX_ENUM_DATA C2 ON C2.ENUM_CD = A.C2  AND C2.IDX_ID = '8a3c36db4fd1aee7014ff31467e9000a' AND C2.DATA_STATE='1' 
 WHERE 1=1 
   AND A.BILL_NO = 'TJHNCD0000000004'
   AND A.CHECK_STATE = '1'   
 ;
 
 --DROP NICKNAME DCCELL.V_PT_PREPAR_FM_D;
CREATE NICKNAME DCCELL.V_PT_PREPAR_FM_D FOR TSOSERVER.TSO.V_PT_PREPAR_FM_D;
 
 
 
 --DROP VIEW TSO.V_PT_PREVENT;
CREATE VIEW TSO.V_PT_PREVENT
  AS
 SELECT 
DATA_STORE_BASE_TBL_ID AS PREVENT_ID,--ID
CLT_OBJ_ID AS FARMER_ID,--对应烟农ID
CLT_OBJ_CD AS FARMER_CD,--对应烟农CD
CLT_OBJ_NAME AS FARMER_NAME,--对应烟农名称
FEEDBACK_PSN_ID AS TECHNICIAN_ID,--对应的烟技员ID
FEEDBACK_DATE AS BUSINESS_DATE,--采集日期
PT_YEAR AS BUSINESS_YEAR,--生产年度
N1 AS PREVENT_AREA,--植保面积
C1 AS PREVENT_RESULT,--防治效果评价
C1.ENUM_NAME AS PREVENT_RESULT_NAME,--实施效果评价_显示名称
C2 AS IS_PROPESS,--是否专业化植保
C2.ENUM_NAME AS IS_PROPESS_NAME,--是否专业化植保_显示名称
C3 AS SERV_ORG_ID,--服务队ID
C9.STATION_UNIQUE_CD AS ORG_CD,--组织单位
C9.DIVISION_UNIQUE_CD AS AREA_CD,--行政区划,
B1.PROV,
B1.PROV_NAME,
B1.CITC,
B1.CITC_NAME,
B1.COUC,
B1.COUC_NAME,
B1.STAC,
B1.STAC_NAME,
B1.SSTC,
B1.SSTC_NAME,
B1.SLIN,
B1.SLIN_NAME,
B1.ORG_NAME,
B2.AREA_PROV,
B2.AREA_PROV_NAME,
B2.AREA_CITC,
B2.AREA_CITC_NAME,
B2.AREA_COUC,
B2.AREA_COUC_NAME,
B2.AREA_TOWN,
B2.TOWN_NAME,
B2.AREA_VAGE,
B2.VAGE_NAME,
B2.AREA_GRUP,
B2.GRUP_NAME,
B2.ORG_NAME AS AREA_NAME,
 A.DATA_STATE  
  FROM PT_DC_STAT_DATA_B A 
      LEFT JOIN PT_IX_ENUM_DATA C2 ON C2.ENUM_CD = A.C2 AND C2.IDX_ID = '8a3c36db4fd1aee7014ff31467e9000a' AND C2.DATA_STATE='1'
      LEFT JOIN PT_IX_ENUM_DATA C1 ON C1.ENUM_CD = A.C1 AND C1.IDX_ID = '8a3c345369b94fd80169b9b9801e00a9' AND C1.DATA_STATE='1'
      LEFT JOIN CM_PM_FRM_FUND C9 ON C9.FRM_FUND_UNIQUE_ID = A.CLT_OBJ_ID AND C9.BIZ_YEAR = A.PT_YEAR AND C9.DATA_STATE = '1'
      LEFT JOIN B_ORG B1 ON C9.STATION_UNIQUE_CD = B1.ORG_UNIQUE_CD 
      LEFT JOIN B_DIVISION B2 ON  C9.DIVISION_UNIQUE_CD  = B2.DIVISION_UNIQUE_CD  
 WHERE 1=1 
   AND A.BILL_NO = 'TJHNCD0000000017'
   AND A.CHECK_STATE = '1'   
 ;
 
 --DROP NICKNAME DCCELL.V_PT_PREVENT;
CREATE NICKNAME DCCELL.V_PT_PREVENT FOR TSOSERVER.TSO.V_PT_PREVENT;
 
 
 
 --DROP VIEW TSO.V_PT_PREVENT_SY;
CREATE VIEW TSO.V_PT_PREVENT_SY
  AS
 SELECT 
DATA_STORE_BASE_TBL_ID AS PREVENT_SY_ID,--ID
CLT_OBJ_ID AS FARMER_ID,--对应烟农ID
CLT_OBJ_CD AS FARMER_CD,--对应烟农CD
CLT_OBJ_NAME AS FARMER_NAME,--对应烟农名称
FEEDBACK_PSN_ID AS TECHNICIAN_ID,--对应的烟技员ID
FEEDBACK_DATE AS BUSINESS_DATE,--采集日期
PT_YEAR AS BUSINESS_YEAR,--生产年度
D1 AS EMPOLY_DATE,--施药日期
C1 AS PESTIC_NO,--药品编号
C2 AS PESTIC_NAME,--药品名称
N1 AS EMPOLY_QTY,--亩用量（克/毫升）
C1.STATION_UNIQUE_CD AS ORG_CD,--组织单位
C1.DIVISION_UNIQUE_CD AS AREA_CD,--行政区划,
B1.PROV,
B1.PROV_NAME,
B1.CITC,
B1.CITC_NAME,
B1.COUC,
B1.COUC_NAME,
B1.STAC,
B1.STAC_NAME,
B1.SSTC,
B1.SSTC_NAME,
B1.SLIN,
B1.SLIN_NAME,
B1.ORG_NAME,
B2.AREA_PROV,
B2.AREA_PROV_NAME,
B2.AREA_CITC,
B2.AREA_CITC_NAME,
B2.AREA_COUC,
B2.AREA_COUC_NAME,
B2.AREA_TOWN,
B2.TOWN_NAME,
B2.AREA_VAGE,
B2.VAGE_NAME,
B2.AREA_GRUP,
B2.GRUP_NAME,
B2.ORG_NAME AS AREA_NAME,
 A.DATA_STATE  
  FROM PT_DC_STAT_DATA_B A 
      LEFT JOIN CM_PM_FRM_FUND C1 ON C1.FRM_FUND_UNIQUE_ID = A.CLT_OBJ_ID AND C1.BIZ_YEAR = A.PT_YEAR AND C1.DATA_STATE = '1'
      LEFT JOIN B_ORG B1 ON C1.STATION_UNIQUE_CD = B1.ORG_UNIQUE_CD 
      LEFT JOIN B_DIVISION B2 ON  C1.DIVISION_UNIQUE_CD  = B2.DIVISION_UNIQUE_CD  
 WHERE 1=1 
   AND A.BILL_NO = 'TJHNCD0000000019'
   AND A.CHECK_STATE = '1'   
 ;
 
 --DROP NICKNAME DCCELL.V_PT_PREVENT_SY;
CREATE NICKNAME DCCELL.V_PT_PREVENT_SY FOR TSOSERVER.TSO.V_PT_PREVENT_SY;
 
 
 --DROP VIEW TSO.V_PT_PUT_FERTILIZ;
CREATE VIEW TSO.V_PT_PUT_FERTILIZ
  AS
 SELECT 
DATA_STORE_BASE_TBL_ID AS PUT_FERTILIZ_D_ID,--ID
CLT_OBJ_ID AS FARMER_ID,--对应烟农ID
CLT_OBJ_CD AS FARMER_CD,--对应烟农CD
CLT_OBJ_NAME AS FARMER_NAME,--对应烟农名称
FEEDBACK_PSN_ID AS TECHNICIAN_ID,--对应的烟技员ID
FEEDBACK_DATE AS BUSINESS_DATE,--采集日期
PT_YEAR AS BUSINESS_YEAR,--生产年度
D1 AS BEGIN_DATE,--开始日期
D2 AS END_DATE,--结束日期
N1 AS FERTILIZ_AREA,--施肥面积
C1 AS IS_MEAL,--是否按套餐施肥
C1.ENUM_NAME AS IS_MEAL_NAME,--是否按套餐施肥_显示名称
C2 AS FERTILIZ_STAND,--施肥标准
C2.ENUM_NAME AS FERTILIZ_STAND_NAME,--施肥标准_显示名称
C9.STATION_UNIQUE_CD AS ORG_CD,--组织单位
C9.DIVISION_UNIQUE_CD AS AREA_CD,--行政区划,
B1.PROV,
B1.PROV_NAME,
B1.CITC,
B1.CITC_NAME,
B1.COUC,
B1.COUC_NAME,
B1.STAC,
B1.STAC_NAME,
B1.SSTC,
B1.SSTC_NAME,
B1.SLIN,
B1.SLIN_NAME,
B1.ORG_NAME,
B2.AREA_PROV,
B2.AREA_PROV_NAME,
B2.AREA_CITC,
B2.AREA_CITC_NAME,
B2.AREA_COUC,
B2.AREA_COUC_NAME,
B2.AREA_TOWN,
B2.TOWN_NAME,
B2.AREA_VAGE,
B2.VAGE_NAME,
B2.AREA_GRUP,
B2.GRUP_NAME,
B2.ORG_NAME AS AREA_NAME,
 A.DATA_STATE  
  FROM PT_DC_STAT_DATA_B A 
      LEFT JOIN PT_IX_ENUM_DATA C1 ON C1.ENUM_CD = A.C1 AND C1.IDX_ID = '8a3c36db4fd1aee7014ff31467e9000a' AND C1.DATA_STATE='1'
      LEFT JOIN CM_PM_FRM_FUND C9 ON C9.FRM_FUND_UNIQUE_ID = A.CLT_OBJ_ID AND C9.BIZ_YEAR = A.PT_YEAR AND C9.DATA_STATE = '1'
      LEFT JOIN PT_IX_ENUM_DATA C2 ON C2.ENUM_CD = A.C2 AND C2.IDX_ID = '8a3c34536a8b0c37016a8c9baf000001' AND C2.DATA_STATE='1'
      LEFT JOIN B_ORG B1 ON C9.STATION_UNIQUE_CD = B1.ORG_UNIQUE_CD 
      LEFT JOIN B_DIVISION B2 ON  C9.DIVISION_UNIQUE_CD  = B2.DIVISION_UNIQUE_CD  
 WHERE 1=1 
   AND A.BILL_NO = 'TJHNCD0000000005'
   AND A.CHECK_STATE = '1'   
 ;
 
 --DROP NICKNAME DCCELL.V_PT_PUT_FERTILIZ;
CREATE NICKNAME DCCELL.V_PT_PUT_FERTILIZ FOR TSOSERVER.TSO.V_PT_PUT_FERTILIZ;
 
 
 
 --DROP VIEW TSO.V_PT_RECOVERY;
CREATE VIEW TSO.V_PT_RECOVERY
  AS
 SELECT 
DATA_STORE_BASE_TBL_ID AS RECOVERY_ID,--ID
CLT_OBJ_ID AS FARMER_ID,--对应烟农ID
CLT_OBJ_CD AS FARMER_CD,--对应烟农CD
CLT_OBJ_NAME AS FARMER_NAME,--对应烟农名称
FEEDBACK_PSN_ID AS TECHNICIAN_ID,--对应的烟技员ID
FEEDBACK_DATE AS BUSINESS_DATE,--采集日期
PT_YEAR AS BUSINESS_YEAR,--生产年度
N1 AS RECOVERY_AREA,--采收面积
C1 AS IS_CERT_RECOVERY,--是否凭证采收
C1.ENUM_NAME AS IS_CERT_RECOVERY_NAME,--是否凭证采收_显示名称
C2 AS RIPE_GRADE,--采收烟叶成熟度
C2.ENUM_NAME AS RIPE_GRADE_NAME,--采收烟叶成熟度_显示名称
C9.STATION_UNIQUE_CD AS ORG_CD,--组织单位
C9.DIVISION_UNIQUE_CD AS AREA_CD,--行政区划,
B1.PROV,
B1.PROV_NAME,
B1.CITC,
B1.CITC_NAME,
B1.COUC,
B1.COUC_NAME,
B1.STAC,
B1.STAC_NAME,
B1.SSTC,
B1.SSTC_NAME,
B1.SLIN,
B1.SLIN_NAME,
B1.ORG_NAME,
B2.AREA_PROV,
B2.AREA_PROV_NAME,
B2.AREA_CITC,
B2.AREA_CITC_NAME,
B2.AREA_COUC,
B2.AREA_COUC_NAME,
B2.AREA_TOWN,
B2.TOWN_NAME,
B2.AREA_VAGE,
B2.VAGE_NAME,
B2.AREA_GRUP,
B2.GRUP_NAME,
B2.ORG_NAME AS AREA_NAME,
 A.DATA_STATE  
  FROM PT_DC_STAT_DATA_B A 
      LEFT JOIN PT_IX_ENUM_DATA C2 ON C2.ENUM_CD = A.C2 AND C2.IDX_ID = '8a3c345369b94fd80169b9b9801e00a9' AND C2.DATA_STATE='1'
      LEFT JOIN PT_IX_ENUM_DATA C1 ON C1.ENUM_CD = A.C1 AND C1.IDX_ID = '8a3c36db4fd1aee7014ff31467e9000a' AND C1.DATA_STATE='1'
      LEFT JOIN CM_PM_FRM_FUND C9 ON C9.FRM_FUND_UNIQUE_ID = A.CLT_OBJ_ID AND C9.BIZ_YEAR = A.PT_YEAR AND C9.DATA_STATE = '1'
      LEFT JOIN B_ORG B1 ON C9.STATION_UNIQUE_CD = B1.ORG_UNIQUE_CD 
      LEFT JOIN B_DIVISION B2 ON  C9.DIVISION_UNIQUE_CD  = B2.DIVISION_UNIQUE_CD  
 WHERE 1=1 
   AND A.BILL_NO = 'TJHNCD0000000020'
   AND A.CHECK_STATE = '1'   
 ;
 
 --DROP NICKNAME DCCELL.V_PT_RECOVERY;
CREATE NICKNAME DCCELL.V_PT_RECOVERY FOR TSOSERVER.TSO.V_PT_RECOVERY;
 
 
 
 --DROP VIEW TSO.V_PT_SMALL_PTSX;
CREATE VIEW TSO.V_PT_SMALL_PTSX
  AS
 SELECT 
DATA_STORE_BASE_TBL_ID AS SMALL_PTSX_ID,--ID
CLT_OBJ_ID AS FARMER_ID,--对应烟农ID
CLT_OBJ_CD AS FARMER_CD,--对应烟农CD
CLT_OBJ_NAME AS FARMER_NAME,--对应烟农名称
FEEDBACK_PSN_ID AS TECHNICIAN_ID,--对应的烟技员ID
FEEDBACK_DATE AS BUSINESS_DATE,--采集日期
PT_YEAR AS BUSINESS_YEAR,--生产年度
D1 AS BEGIN_DATE,--开始日期
D2 AS END_DATE,--结束日期
N1 AS PTSX_AREA,--培土面积
C1 AS IS_HIGH_STAND,--垄高高度是否达到标准
C1.ENUM_NAME AS IS_HIGH_STAND_NAME,--垄高高度是否达到标准_显示名称
C2 AS WORK_EFFECT_EVAL,--实施效果评价
C2.ENUM_NAME AS WORK_EFFECT_EVAL_NAME,--实施效果评价_显示名称
C9.STATION_UNIQUE_CD AS ORG_CD,--组织单位
C9.DIVISION_UNIQUE_CD AS AREA_CD,--行政区划,
B1.PROV,
B1.PROV_NAME,
B1.CITC,
B1.CITC_NAME,
B1.COUC,
B1.COUC_NAME,
B1.STAC,
B1.STAC_NAME,
B1.SSTC,
B1.SSTC_NAME,
B1.SLIN,
B1.SLIN_NAME,
B1.ORG_NAME,
B2.AREA_PROV,
B2.AREA_PROV_NAME,
B2.AREA_CITC,
B2.AREA_CITC_NAME,
B2.AREA_COUC,
B2.AREA_COUC_NAME,
B2.AREA_TOWN,
B2.TOWN_NAME,
B2.AREA_VAGE,
B2.VAGE_NAME,
B2.AREA_GRUP,
B2.GRUP_NAME,
B2.ORG_NAME AS AREA_NAME,
 A.DATA_STATE  
  FROM PT_DC_STAT_DATA_F A 
      LEFT JOIN PT_IX_ENUM_DATA C2 ON C2.ENUM_CD = A.C2 AND C2.IDX_ID = '8a3c345369b94fd80169b9b9801e00a9' AND C2.DATA_STATE='1'
      LEFT JOIN PT_IX_ENUM_DATA C1 ON C1.ENUM_CD = A.C1 AND C1.IDX_ID = '8a3c36db4fd1aee7014ff31467e9000a' AND C1.DATA_STATE='1'
      LEFT JOIN CM_PM_FRM_FUND C9 ON C9.FRM_FUND_UNIQUE_ID = A.CLT_OBJ_ID AND C9.BIZ_YEAR = A.PT_YEAR AND C9.DATA_STATE = '1'
      LEFT JOIN B_ORG B1 ON C9.STATION_UNIQUE_CD = B1.ORG_UNIQUE_CD 
      LEFT JOIN B_DIVISION B2 ON  C9.DIVISION_UNIQUE_CD  = B2.DIVISION_UNIQUE_CD  
 WHERE 1=1 
   AND A.BILL_NO = 'TJHNCD0000000011'
   AND A.CHECK_STATE = '1'   
 ;
 
 --DROP NICKNAME DCCELL.V_PT_SMALL_PTSX;
CREATE NICKNAME DCCELL.V_PT_SMALL_PTSX FOR TSOSERVER.TSO.V_PT_SMALL_PTSX;
 
 
 
 
 --DROP VIEW TSO.V_PT_TRANSPLANT_FM_D;
CREATE VIEW TSO.V_PT_TRANSPLANT_FM_D
  AS
 SELECT 
DATA_STORE_BASE_TBL_ID AS TRANSPLANT_FM_D_ID,--ID
CLT_OBJ_ID AS FARMER_ID,--对应烟农ID
CLT_OBJ_CD AS FARMER_CD,--对应烟农CD
CLT_OBJ_NAME AS FARMER_NAME,--对应烟农名称
FEEDBACK_DATE AS BUSINESS_DATE,--采集日期
PT_YEAR AS BUSINESS_YEAR,--生产年度
D1 AS BEGIN_DATE,--开始日期
D2 AS END_DATE,--结束日期
N1 AS TRANSPLANT_AREA,--移栽面积
C1 AS LINE_DISTANCE,--行距
C1.ENUM_NAME AS LINE_DISTANCE_NAME,--行距_显示名称
C2 AS ONE_DISTANCE,--株距
C2.ENUM_NAME AS ONE_DISTANCE_NAME,--株距_显示名称
C3 AS WORK_EFFECT_EVAL,--实施效果评价
C3.ENUM_NAME AS WORK_EFFECT_EVAL_NAME,--实施效果评价_显示名称
C9.STATION_UNIQUE_CD AS ORG_CD,--组织单位
C9.DIVISION_UNIQUE_CD AS AREA_CD,--行政区划,
 A.DATA_STATE 
  FROM PT_DC_STAT_DATA_B A 
      LEFT JOIN CM_PM_FRM_FUND C9 ON C9.FRM_FUND_UNIQUE_ID = A.CLT_OBJ_ID AND C9.BIZ_YEAR = A.PT_YEAR AND C9.DATA_STATE = '1'
      LEFT JOIN PT_IX_ENUM_DATA C3 ON C3.ENUM_CD = A.C3  AND C3.IDX_ID = '8a3c345369b94fd80169b9b9801e00a9' AND C3.DATA_STATE='1'
      LEFT JOIN PT_IX_ENUM_DATA C2 ON C2.ENUM_CD = A.C2  AND C2.IDX_ID = '8a3c34536a68f3fa016a860323fc00ae' AND C2.DATA_STATE='1'
      LEFT JOIN PT_IX_ENUM_DATA C1 ON C1.ENUM_CD = A.C1  AND C1.IDX_ID = '8a3c34536a68f3fa016a860017aa00a9' AND C1.DATA_STATE='1' 
 WHERE 1=1 
   AND A.BILL_NO = 'TJHNCD0000000002'
   AND A.CHECK_STATE = '1'   
 ;
 
 --DROP NICKNAME DCCELL.V_PT_TRANSPLANT_FM_D;
CREATE NICKNAME DCCELL.V_PT_TRANSPLANT_FM_D FOR TSOSERVER.TSO.V_PT_TRANSPLANT_FM_D;


--打顶抹杈
--DROP PROCEDURE DCCELL.P_PT_DT_FM_D;
 CREATE PROCEDURE DCCELL.P_PT_DT_FM_D 
---------------------------------------
--linds
---------------------------------------
BEGIN 
DECLARE V_PROC_NAME           VARCHAR(1000) DEFAULT 'P_PT_DT_FM_D';
DECLARE V_BILL_NO             VARCHAR(64) DEFAULT 'TJHNCD0000000015';
DECLARE V_STEP                VARCHAR(500);
DECLARE V_YEAR             INTEGER ;
DECLARE V_CURRENTTIMESTAMP    TIMESTAMP  ;
DECLARE V_LOG_GROUP           VARCHAR(32);
DECLARE V_LOG                 VARCHAR(32);


SET V_CURRENTTIMESTAMP = CURRENT TIMESTAMP;
SET V_LOG = ' ';
SET V_LOG_GROUP = TO_CHAR(V_CURRENTTIMESTAMP,'YYYY-MM-DD HH24:MI:SS');
SELECT BUSI_YEAR INTO V_YEAR 
  FROM DC_PROC_BUSI_YEAR A 
 WHERE A.PROC_NAME = 'P_DC_CALL_ID_02_SC'
;


SET V_STEP = 'R_PT_DT_FM_D DELETE';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
DELETE FROM R_PT_DT_FM_D T WHERE T.BUSINESS_YEAR >= V_YEAR;
COMMIT;

SET V_STEP = 'R_PT_DT_FM_D MERGE';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
MERGE INTO R_PT_DT_FM_D A 
USING(
   SELECT 
DT_FM_D_ID,
FARMER_ID,
FARMER_CD,
FARMER_NAME,
BUSINESS_DATE,
BUSINESS_YEAR,
BEGIN_DATE,
END_DATE,
BEAT_TOP_AREA,
BEAT_TOP_OPPORT,
BEAT_TOP_OPPORT_NAME,
BEAT_TOP_LEAF_QTY_EK,
BEAT_TOP_LEAF_QTY_EK_NAME,
WORK_EFFECT_EVAL,
WORK_EFFECT_EVAL_NAME,
ORG_CD,
AREA_CD 
  FROM V_PT_DT_FM_D 
 WHERE 1=1 AND DATA_STATE='1' AND BUSINESS_YEAR>= V_YEAR    
) B 
ON (A.DT_FM_D_ID = B.DT_FM_D_ID) 
WHEN MATCHED THEN 
UPDATE SET
  A.DT_FM_D_ID = B.DT_FM_D_ID,
  A.FARMER_ID = B.FARMER_ID,
  A.FARMER_CD = B.FARMER_CD,
  A.FARMER_NAME = B.FARMER_NAME,
  A.BUSINESS_DATE = B.BUSINESS_DATE,
  A.BUSINESS_YEAR = B.BUSINESS_YEAR,
  A.BEGIN_DATE = B.BEGIN_DATE,
  A.END_DATE = B.END_DATE,
  A.BEAT_TOP_AREA = B.BEAT_TOP_AREA,
  A.BEAT_TOP_OPPORT = B.BEAT_TOP_OPPORT,
  A.BEAT_TOP_OPPORT_NAME = B.BEAT_TOP_OPPORT_NAME,
  A.BEAT_TOP_LEAF_QTY_EK = B.BEAT_TOP_LEAF_QTY_EK,
  A.BEAT_TOP_LEAF_QTY_EK_NAME = B.BEAT_TOP_LEAF_QTY_EK_NAME,
  A.WORK_EFFECT_EVAL = B.WORK_EFFECT_EVAL,
  A.WORK_EFFECT_EVAL_NAME = B.WORK_EFFECT_EVAL_NAME,
  A.ORG_CD = B.ORG_CD,
  A.AREA_CD = B.AREA_CD 
WHEN NOT MATCHED THEN 
INSERT (
  A.DT_FM_D_ID,
  A.FARMER_ID,
  A.FARMER_CD,
  A.FARMER_NAME,
  A.BUSINESS_DATE,
  A.BUSINESS_YEAR,
  A.BEGIN_DATE,
  A.END_DATE,
  A.BEAT_TOP_AREA,
  A.BEAT_TOP_OPPORT,
  A.BEAT_TOP_OPPORT_NAME,
  A.BEAT_TOP_LEAF_QTY_EK,
  A.BEAT_TOP_LEAF_QTY_EK_NAME,
  A.WORK_EFFECT_EVAL,
  A.WORK_EFFECT_EVAL_NAME,
  A.ORG_CD,
  A.AREA_CD
) 
 VALUES
 (
  B.DT_FM_D_ID,
  B.FARMER_ID,
  B.FARMER_CD,
  B.FARMER_NAME,
  B.BUSINESS_DATE,
  B.BUSINESS_YEAR,
  B.BEGIN_DATE,
  B.END_DATE,
  B.BEAT_TOP_AREA,
  B.BEAT_TOP_OPPORT,
  B.BEAT_TOP_OPPORT_NAME,
  B.BEAT_TOP_LEAF_QTY_EK,
  B.BEAT_TOP_LEAF_QTY_EK_NAME,
  B.WORK_EFFECT_EVAL,
  B.WORK_EFFECT_EVAL_NAME,
  B.ORG_CD,
  B.AREA_CD
); 

COMMIT;
SET V_STEP = 'R_PT_DT_FM_D UPDATEORG';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
MERGE INTO R_PT_DT_FM_D A
USING
(
  SELECT CASE WHEN B.PROV = '0' THEN NULL ELSE B.PROV END AS PROV,
         CASE WHEN B.CITC = '0' THEN NULL ELSE B.CITC END AS CITC,
         CASE WHEN B.COUC = '0' THEN NULL ELSE B.COUC END AS COUC,
         CASE WHEN B.STAC = '0' THEN NULL ELSE B.STAC END AS STAC,
         CASE WHEN B.SSTC = '0' THEN NULL ELSE B.SSTC END AS SSTC,
         CASE WHEN B.SLIN = '0' THEN NULL ELSE B.SLIN END AS SLIN,
         B.PROV_NAME,
         B.CITC_NAME,
         B.COUC_NAME,
         B.STAC_NAME,
         B.SSTC_NAME,
         B.SLIN_NAME, 
         B.ORG_UNIQUE_CD,
         B.ORG_NAME
    FROM B_ORG B
   WHERE B.ORG_TYPE = '2'
) B
ON (B.ORG_UNIQUE_CD = A.ORG_CD AND A.DATA_STATE = '1'  AND A.BUSINESS_YEAR >= V_YEAR AND A.PROV_NAME IS NULL) 
WHEN MATCHED THEN
  UPDATE SET
         A.PROV       = B.PROV      ,
         A.CITC       = B.CITC      ,
         A.COUC       = B.COUC      ,
         A.STAC       = B.STAC      ,
         A.SSTC       = B.SSTC      ,
         A.SLIN       = B.SLIN      ,
         A.PROV_NAME  = B.PROV_NAME ,
         A.CITC_NAME  = B.CITC_NAME ,
         A.COUC_NAME  = B.COUC_NAME ,
         A.STAC_NAME  = B.STAC_NAME ,
         A.SSTC_NAME  = B.SSTC_NAME ,
         A.SLIN_NAME  = B.SLIN_NAME ,
         A.ORG_NAME   = B.ORG_NAME   
;

SET V_STEP = 'R_PT_DT_FM_D UPDATEDIV';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
MERGE INTO R_PT_DT_FM_D A
USING
(
  SELECT CASE WHEN B.PROV = '0' THEN NULL ELSE B.PROV END AS PROV,
         CASE WHEN B.CITC = '0' THEN NULL ELSE B.CITC END AS CITC,
         CASE WHEN B.COUC = '0' THEN NULL ELSE B.COUC END AS COUC,
         CASE WHEN B.STAC = '0' THEN NULL ELSE B.STAC END AS STAC,
         CASE WHEN B.SSTC = '0' THEN NULL ELSE B.SSTC END AS SSTC,
         CASE WHEN B.SLIN = '0' THEN NULL ELSE B.SLIN END AS SLIN,
         B.PROV_NAME,
         B.CITC_NAME,
         B.COUC_NAME,
         B.STAC_NAME,
         B.SSTC_NAME,
         B.SLIN_NAME, 
         B.ORG_UNIQUE_CD,
         B.ORG_NAME
    FROM B_ORG B
   WHERE B.ORG_TYPE = '2'
) B
ON (B.ORG_UNIQUE_CD = A.ORG_CD AND A.DATA_STATE = '1'  AND A.BUSINESS_YEAR >= V_YEAR AND A.PROV_NAME IS NULL) 
WHEN MATCHED THEN
  UPDATE SET
         A.PROV       = B.PROV      ,
         A.CITC       = B.CITC      ,
         A.COUC       = B.COUC      ,
         A.STAC       = B.STAC      ,
         A.SSTC       = B.SSTC      ,
         A.SLIN       = B.SLIN      ,
         A.PROV_NAME  = B.PROV_NAME ,
         A.CITC_NAME  = B.CITC_NAME ,
         A.COUC_NAME  = B.COUC_NAME ,
         A.STAC_NAME  = B.STAC_NAME ,
         A.SSTC_NAME  = B.SSTC_NAME ,
         A.SLIN_NAME  = B.SLIN_NAME ,
         A.ORG_NAME   = B.ORG_NAME   
;

END
@



--翻耕
--DROP PROCEDURE DCCELL.P_PT_PLOUGH_FM_D;
 CREATE PROCEDURE DCCELL.P_PT_PLOUGH_FM_D 
---------------------------------------
--linds
---------------------------------------
BEGIN 
DECLARE V_PROC_NAME           VARCHAR(1000) DEFAULT 'P_PT_PLOUGH_FM_D';
DECLARE V_BILL_NO             VARCHAR(64) DEFAULT 'TJHNCD0000000001';
DECLARE V_STEP                VARCHAR(500);
DECLARE V_YEAR             INTEGER ;
DECLARE V_CURRENTTIMESTAMP    TIMESTAMP  ;
DECLARE V_LOG_GROUP           VARCHAR(32);
DECLARE V_LOG                 VARCHAR(32);


SET V_CURRENTTIMESTAMP = CURRENT TIMESTAMP;
SET V_LOG = ' ';
SET V_LOG_GROUP = TO_CHAR(V_CURRENTTIMESTAMP,'YYYY-MM-DD HH24:MI:SS');
SELECT BUSI_YEAR INTO V_YEAR 
  FROM DC_PROC_BUSI_YEAR A 
 WHERE A.PROC_NAME = 'P_DC_CALL_ID_02_SC'
;


SET V_STEP = 'R_PT_PLOUGH_FM_D DELETE';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
DELETE FROM R_PT_PLOUGH_FM_D T WHERE T.BUSINESS_YEAR >= V_YEAR;
COMMIT;

SET V_STEP = 'R_PT_PLOUGH_FM_D MERGE';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
MERGE INTO R_PT_PLOUGH_FM_D A 
USING(
   SELECT 
PLOUGH_FM_D_ID,
FARMER_ID,
FARMER_CD,
FARMER_NAME,
BUSINESS_DATE,
BUSINESS_YEAR,
END_DATE,
PLOUGH_AREA,
IS_DEPTH_STAND,
IS_DEPTH_STAND_NAME,
IS_OPEN_TRENCH,
IS_OPEN_TRENCH_NAME,
IS_PROPESS,
IS_PROPESS_NAME,
WORK_EFFECT_EVAL,
WORK_EFFECT_EVAL_NAME,
SERV_ORG_ID,
ORG_CD,
AREA_CD 
  FROM V_PT_PLOUGH_FM_D 
 WHERE 1=1 AND DATA_STATE='1' AND BUSINESS_YEAR>= V_YEAR    
) B 
ON (A.PLOUGH_FM_D_ID = B.PLOUGH_FM_D_ID) 
WHEN MATCHED THEN 
UPDATE SET
  A.PLOUGH_FM_D_ID = B.PLOUGH_FM_D_ID,
  A.FARMER_ID = B.FARMER_ID,
  A.FARMER_CD = B.FARMER_CD,
  A.FARMER_NAME = B.FARMER_NAME,
  A.BUSINESS_DATE = B.BUSINESS_DATE,
  A.BUSINESS_YEAR = B.BUSINESS_YEAR,
  A.END_DATE = B.END_DATE,
  A.PLOUGH_AREA = B.PLOUGH_AREA,
  A.IS_DEPTH_STAND = B.IS_DEPTH_STAND,
  A.IS_DEPTH_STAND_NAME = B.IS_DEPTH_STAND_NAME,
  A.IS_OPEN_TRENCH = B.IS_OPEN_TRENCH,
  A.IS_OPEN_TRENCH_NAME = B.IS_OPEN_TRENCH_NAME,
  A.IS_PROPESS = B.IS_PROPESS,
  A.IS_PROPESS_NAME = B.IS_PROPESS_NAME,
  A.WORK_EFFECT_EVAL = B.WORK_EFFECT_EVAL,
  A.WORK_EFFECT_EVAL_NAME = B.WORK_EFFECT_EVAL_NAME,
  A.SERV_ORG_ID = B.SERV_ORG_ID,
  A.ORG_CD = B.ORG_CD,
  A.AREA_CD = B.AREA_CD 
WHEN NOT MATCHED THEN 
INSERT (
  A.PLOUGH_FM_D_ID,
  A.FARMER_ID,
  A.FARMER_CD,
  A.FARMER_NAME,
  A.BUSINESS_DATE,
  A.BUSINESS_YEAR,
  A.END_DATE,
  A.PLOUGH_AREA,
  A.IS_DEPTH_STAND,
  A.IS_DEPTH_STAND_NAME,
  A.IS_OPEN_TRENCH,
  A.IS_OPEN_TRENCH_NAME,
  A.IS_PROPESS,
  A.IS_PROPESS_NAME,
  A.WORK_EFFECT_EVAL,
  A.WORK_EFFECT_EVAL_NAME,
  A.SERV_ORG_ID,
  A.ORG_CD,
  A.AREA_CD
) 
 VALUES
 (
  B.PLOUGH_FM_D_ID,
  B.FARMER_ID,
  B.FARMER_CD,
  B.FARMER_NAME,
  B.BUSINESS_DATE,
  B.BUSINESS_YEAR,
  B.END_DATE,
  B.PLOUGH_AREA,
  B.IS_DEPTH_STAND,
  B.IS_DEPTH_STAND_NAME,
  B.IS_OPEN_TRENCH,
  B.IS_OPEN_TRENCH_NAME,
  B.IS_PROPESS,
  B.IS_PROPESS_NAME,
  B.WORK_EFFECT_EVAL,
  B.WORK_EFFECT_EVAL_NAME,
  B.SERV_ORG_ID,
  B.ORG_CD,
  B.AREA_CD
); 

COMMIT;
SET V_STEP = 'R_PT_PLOUGH_FM_D UPDATEORG';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
MERGE INTO R_PT_PLOUGH_FM_D A
USING
(
  SELECT CASE WHEN B.PROV = '0' THEN NULL ELSE B.PROV END AS PROV,
         CASE WHEN B.CITC = '0' THEN NULL ELSE B.CITC END AS CITC,
         CASE WHEN B.COUC = '0' THEN NULL ELSE B.COUC END AS COUC,
         CASE WHEN B.STAC = '0' THEN NULL ELSE B.STAC END AS STAC,
         CASE WHEN B.SSTC = '0' THEN NULL ELSE B.SSTC END AS SSTC,
         CASE WHEN B.SLIN = '0' THEN NULL ELSE B.SLIN END AS SLIN,
         B.PROV_NAME,
         B.CITC_NAME,
         B.COUC_NAME,
         B.STAC_NAME,
         B.SSTC_NAME,
         B.SLIN_NAME, 
         B.ORG_UNIQUE_CD,
         B.ORG_NAME
    FROM B_ORG B
   WHERE B.ORG_TYPE = '2'
) B
ON (B.ORG_UNIQUE_CD = A.ORG_CD AND A.DATA_STATE = '1'  AND A.BUSINESS_YEAR >= V_YEAR AND A.PROV_NAME IS NULL) 
WHEN MATCHED THEN
  UPDATE SET
         A.PROV       = B.PROV      ,
         A.CITC       = B.CITC      ,
         A.COUC       = B.COUC      ,
         A.STAC       = B.STAC      ,
         A.SSTC       = B.SSTC      ,
         A.SLIN       = B.SLIN      ,
         A.PROV_NAME  = B.PROV_NAME ,
         A.CITC_NAME  = B.CITC_NAME ,
         A.COUC_NAME  = B.COUC_NAME ,
         A.STAC_NAME  = B.STAC_NAME ,
         A.SSTC_NAME  = B.SSTC_NAME ,
         A.SLIN_NAME  = B.SLIN_NAME ,
         A.ORG_NAME   = B.ORG_NAME   
;

SET V_STEP = 'R_PT_PLOUGH_FM_D UPDATEDIV';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
MERGE INTO R_PT_PLOUGH_FM_D A
USING
(
  SELECT CASE WHEN B.PROV = '0' THEN NULL ELSE B.PROV END AS PROV,
         CASE WHEN B.CITC = '0' THEN NULL ELSE B.CITC END AS CITC,
         CASE WHEN B.COUC = '0' THEN NULL ELSE B.COUC END AS COUC,
         CASE WHEN B.STAC = '0' THEN NULL ELSE B.STAC END AS STAC,
         CASE WHEN B.SSTC = '0' THEN NULL ELSE B.SSTC END AS SSTC,
         CASE WHEN B.SLIN = '0' THEN NULL ELSE B.SLIN END AS SLIN,
         B.PROV_NAME,
         B.CITC_NAME,
         B.COUC_NAME,
         B.STAC_NAME,
         B.SSTC_NAME,
         B.SLIN_NAME, 
         B.ORG_UNIQUE_CD,
         B.ORG_NAME
    FROM B_ORG B
   WHERE B.ORG_TYPE = '2'
) B
ON (B.ORG_UNIQUE_CD = A.ORG_CD AND A.DATA_STATE = '1'  AND A.BUSINESS_YEAR >= V_YEAR AND A.PROV_NAME IS NULL) 
WHEN MATCHED THEN
  UPDATE SET
         A.PROV       = B.PROV      ,
         A.CITC       = B.CITC      ,
         A.COUC       = B.COUC      ,
         A.STAC       = B.STAC      ,
         A.SSTC       = B.SSTC      ,
         A.SLIN       = B.SLIN      ,
         A.PROV_NAME  = B.PROV_NAME ,
         A.CITC_NAME  = B.CITC_NAME ,
         A.COUC_NAME  = B.COUC_NAME ,
         A.STAC_NAME  = B.STAC_NAME ,
         A.SSTC_NAME  = B.SSTC_NAME ,
         A.SLIN_NAME  = B.SLIN_NAME ,
         A.ORG_NAME   = B.ORG_NAME   
;

END
@



--起垄
--DROP PROCEDURE DCCELL.P_PT_PREPAR_FM_D;
 CREATE PROCEDURE DCCELL.P_PT_PREPAR_FM_D 
---------------------------------------
--linds
---------------------------------------
BEGIN 
DECLARE V_PROC_NAME           VARCHAR(1000) DEFAULT 'P_PT_PREPAR_FM_D';
DECLARE V_BILL_NO             VARCHAR(64) DEFAULT 'TJHNCD0000000004';
DECLARE V_STEP                VARCHAR(500);
DECLARE V_YEAR             INTEGER ;
DECLARE V_CURRENTTIMESTAMP    TIMESTAMP  ;
DECLARE V_LOG_GROUP           VARCHAR(32);
DECLARE V_LOG                 VARCHAR(32);


SET V_CURRENTTIMESTAMP = CURRENT TIMESTAMP;
SET V_LOG = ' ';
SET V_LOG_GROUP = TO_CHAR(V_CURRENTTIMESTAMP,'YYYY-MM-DD HH24:MI:SS');
SELECT BUSI_YEAR INTO V_YEAR 
  FROM DC_PROC_BUSI_YEAR A 
 WHERE A.PROC_NAME = 'P_DC_CALL_ID_02_SC'
;


SET V_STEP = 'R_PT_PREPAR_FM_D DELETE';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
DELETE FROM R_PT_PREPAR_FM_D T WHERE T.BUSINESS_YEAR >= V_YEAR;
COMMIT;

SET V_STEP = 'R_PT_PREPAR_FM_D MERGE';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
MERGE INTO R_PT_PREPAR_FM_D A 
USING(
   SELECT 
PREPAR_FM_D_ID,
FARMER_ID,
FARMER_CD,
FARMER_NAME,
BUSINESS_DATE,
BUSINESS_YEAR,
END_DATE,
PREPAR_AREA,
IS_HIGH_STAND,
IS_HIGH_STAND_NAME,
IS_PROPESS,
IS_PROPESS_NAME,
WORK_EFFECT_EVAL,
WORK_EFFECT_EVAL_NAME,
SERV_ORG_ID,
ORG_CD,
AREA_CD 
  FROM V_PT_PREPAR_FM_D 
 WHERE 1=1 AND DATA_STATE='1' AND BUSINESS_YEAR>= V_YEAR    
) B 
ON (A.PREPAR_FM_D_ID = B.PREPAR_FM_D_ID) 
WHEN MATCHED THEN 
UPDATE SET
  A.PREPAR_FM_D_ID = B.PREPAR_FM_D_ID,
  A.FARMER_ID = B.FARMER_ID,
  A.FARMER_CD = B.FARMER_CD,
  A.FARMER_NAME = B.FARMER_NAME,
  A.BUSINESS_DATE = B.BUSINESS_DATE,
  A.BUSINESS_YEAR = B.BUSINESS_YEAR,
  A.END_DATE = B.END_DATE,
  A.PREPAR_AREA = B.PREPAR_AREA,
  A.IS_HIGH_STAND = B.IS_HIGH_STAND,
  A.IS_HIGH_STAND_NAME = B.IS_HIGH_STAND_NAME,
  A.IS_PROPESS = B.IS_PROPESS,
  A.IS_PROPESS_NAME = B.IS_PROPESS_NAME,
  A.WORK_EFFECT_EVAL = B.WORK_EFFECT_EVAL,
  A.WORK_EFFECT_EVAL_NAME = B.WORK_EFFECT_EVAL_NAME,
  A.SERV_ORG_ID = B.SERV_ORG_ID,
  A.ORG_CD = B.ORG_CD,
  A.AREA_CD = B.AREA_CD 
WHEN NOT MATCHED THEN 
INSERT (
  A.PREPAR_FM_D_ID,
  A.FARMER_ID,
  A.FARMER_CD,
  A.FARMER_NAME,
  A.BUSINESS_DATE,
  A.BUSINESS_YEAR,
  A.END_DATE,
  A.PREPAR_AREA,
  A.IS_HIGH_STAND,
  A.IS_HIGH_STAND_NAME,
  A.IS_PROPESS,
  A.IS_PROPESS_NAME,
  A.WORK_EFFECT_EVAL,
  A.WORK_EFFECT_EVAL_NAME,
  A.SERV_ORG_ID,
  A.ORG_CD,
  A.AREA_CD
) 
 VALUES
 (
  B.PREPAR_FM_D_ID,
  B.FARMER_ID,
  B.FARMER_CD,
  B.FARMER_NAME,
  B.BUSINESS_DATE,
  B.BUSINESS_YEAR,
  B.END_DATE,
  B.PREPAR_AREA,
  B.IS_HIGH_STAND,
  B.IS_HIGH_STAND_NAME,
  B.IS_PROPESS,
  B.IS_PROPESS_NAME,
  B.WORK_EFFECT_EVAL,
  B.WORK_EFFECT_EVAL_NAME,
  B.SERV_ORG_ID,
  B.ORG_CD,
  B.AREA_CD
); 

COMMIT;
SET V_STEP = 'R_PT_PREPAR_FM_D UPDATEORG';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
MERGE INTO R_PT_PREPAR_FM_D A
USING
(
  SELECT CASE WHEN B.PROV = '0' THEN NULL ELSE B.PROV END AS PROV,
         CASE WHEN B.CITC = '0' THEN NULL ELSE B.CITC END AS CITC,
         CASE WHEN B.COUC = '0' THEN NULL ELSE B.COUC END AS COUC,
         CASE WHEN B.STAC = '0' THEN NULL ELSE B.STAC END AS STAC,
         CASE WHEN B.SSTC = '0' THEN NULL ELSE B.SSTC END AS SSTC,
         CASE WHEN B.SLIN = '0' THEN NULL ELSE B.SLIN END AS SLIN,
         B.PROV_NAME,
         B.CITC_NAME,
         B.COUC_NAME,
         B.STAC_NAME,
         B.SSTC_NAME,
         B.SLIN_NAME, 
         B.ORG_UNIQUE_CD,
         B.ORG_NAME
    FROM B_ORG B
   WHERE B.ORG_TYPE = '2'
) B
ON (B.ORG_UNIQUE_CD = A.ORG_CD AND A.DATA_STATE = '1'  AND A.BUSINESS_YEAR >= V_YEAR AND A.PROV_NAME IS NULL) 
WHEN MATCHED THEN
  UPDATE SET
         A.PROV       = B.PROV      ,
         A.CITC       = B.CITC      ,
         A.COUC       = B.COUC      ,
         A.STAC       = B.STAC      ,
         A.SSTC       = B.SSTC      ,
         A.SLIN       = B.SLIN      ,
         A.PROV_NAME  = B.PROV_NAME ,
         A.CITC_NAME  = B.CITC_NAME ,
         A.COUC_NAME  = B.COUC_NAME ,
         A.STAC_NAME  = B.STAC_NAME ,
         A.SSTC_NAME  = B.SSTC_NAME ,
         A.SLIN_NAME  = B.SLIN_NAME ,
         A.ORG_NAME   = B.ORG_NAME   
;

SET V_STEP = 'R_PT_PREPAR_FM_D UPDATEDIV';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
MERGE INTO R_PT_PREPAR_FM_D A
USING
(
  SELECT CASE WHEN B.PROV = '0' THEN NULL ELSE B.PROV END AS PROV,
         CASE WHEN B.CITC = '0' THEN NULL ELSE B.CITC END AS CITC,
         CASE WHEN B.COUC = '0' THEN NULL ELSE B.COUC END AS COUC,
         CASE WHEN B.STAC = '0' THEN NULL ELSE B.STAC END AS STAC,
         CASE WHEN B.SSTC = '0' THEN NULL ELSE B.SSTC END AS SSTC,
         CASE WHEN B.SLIN = '0' THEN NULL ELSE B.SLIN END AS SLIN,
         B.PROV_NAME,
         B.CITC_NAME,
         B.COUC_NAME,
         B.STAC_NAME,
         B.SSTC_NAME,
         B.SLIN_NAME, 
         B.ORG_UNIQUE_CD,
         B.ORG_NAME
    FROM B_ORG B
   WHERE B.ORG_TYPE = '2'
) B
ON (B.ORG_UNIQUE_CD = A.ORG_CD AND A.DATA_STATE = '1'  AND A.BUSINESS_YEAR >= V_YEAR AND A.PROV_NAME IS NULL) 
WHEN MATCHED THEN
  UPDATE SET
         A.PROV       = B.PROV      ,
         A.CITC       = B.CITC      ,
         A.COUC       = B.COUC      ,
         A.STAC       = B.STAC      ,
         A.SSTC       = B.SSTC      ,
         A.SLIN       = B.SLIN      ,
         A.PROV_NAME  = B.PROV_NAME ,
         A.CITC_NAME  = B.CITC_NAME ,
         A.COUC_NAME  = B.COUC_NAME ,
         A.STAC_NAME  = B.STAC_NAME ,
         A.SSTC_NAME  = B.SSTC_NAME ,
         A.SLIN_NAME  = B.SLIN_NAME ,
         A.ORG_NAME   = B.ORG_NAME   
;

END
@



--移栽
--DROP PROCEDURE DCCELL.P_PT_TRANSPLANT_FM_D;
 CREATE PROCEDURE DCCELL.P_PT_TRANSPLANT_FM_D 
---------------------------------------
--linds
---------------------------------------
BEGIN 
DECLARE V_PROC_NAME           VARCHAR(1000) DEFAULT 'P_PT_TRANSPLANT_FM_D';
DECLARE V_BILL_NO             VARCHAR(64) DEFAULT 'TJHNCD0000000002';
DECLARE V_STEP                VARCHAR(500);
DECLARE V_YEAR             INTEGER ;
DECLARE V_CURRENTTIMESTAMP    TIMESTAMP  ;
DECLARE V_LOG_GROUP           VARCHAR(32);
DECLARE V_LOG                 VARCHAR(32);


SET V_CURRENTTIMESTAMP = CURRENT TIMESTAMP;
SET V_LOG = ' ';
SET V_LOG_GROUP = TO_CHAR(V_CURRENTTIMESTAMP,'YYYY-MM-DD HH24:MI:SS');
SELECT BUSI_YEAR INTO V_YEAR 
  FROM DC_PROC_BUSI_YEAR A 
 WHERE A.PROC_NAME = 'P_DC_CALL_ID_02_SC'
;


SET V_STEP = 'R_PT_TRANSPLANT_FM_D DELETE';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
DELETE FROM R_PT_TRANSPLANT_FM_D T WHERE T.BUSINESS_YEAR >= V_YEAR;
COMMIT;

SET V_STEP = 'R_PT_TRANSPLANT_FM_D MERGE';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
MERGE INTO R_PT_TRANSPLANT_FM_D A 
USING(
   SELECT 
TRANSPLANT_FM_D_ID,
FARMER_ID,
FARMER_CD,
FARMER_NAME,
BUSINESS_DATE,
BUSINESS_YEAR,
BEGIN_DATE,
END_DATE,
TRANSPLANT_AREA,
LINE_DISTANCE,
LINE_DISTANCE_NAME,
ONE_DISTANCE,
ONE_DISTANCE_NAME,
WORK_EFFECT_EVAL,
WORK_EFFECT_EVAL_NAME,
ORG_CD,
AREA_CD 
  FROM V_PT_TRANSPLANT_FM_D 
 WHERE 1=1 AND DATA_STATE='1' AND BUSINESS_YEAR>= V_YEAR    
) B 
ON (A.TRANSPLANT_FM_D_ID = B.TRANSPLANT_FM_D_ID) 
WHEN MATCHED THEN 
UPDATE SET
  A.TRANSPLANT_FM_D_ID = B.TRANSPLANT_FM_D_ID,
  A.FARMER_ID = B.FARMER_ID,
  A.FARMER_CD = B.FARMER_CD,
  A.FARMER_NAME = B.FARMER_NAME,
  A.BUSINESS_DATE = B.BUSINESS_DATE,
  A.BUSINESS_YEAR = B.BUSINESS_YEAR,
  A.BEGIN_DATE = B.BEGIN_DATE,
  A.END_DATE = B.END_DATE,
  A.TRANSPLANT_AREA = B.TRANSPLANT_AREA,
  A.LINE_DISTANCE = B.LINE_DISTANCE,
  A.LINE_DISTANCE_NAME = B.LINE_DISTANCE_NAME,
  A.ONE_DISTANCE = B.ONE_DISTANCE,
  A.ONE_DISTANCE_NAME = B.ONE_DISTANCE_NAME,
  A.WORK_EFFECT_EVAL = B.WORK_EFFECT_EVAL,
  A.WORK_EFFECT_EVAL_NAME = B.WORK_EFFECT_EVAL_NAME,
  A.ORG_CD = B.ORG_CD,
  A.AREA_CD = B.AREA_CD 
WHEN NOT MATCHED THEN 
INSERT (
  A.TRANSPLANT_FM_D_ID,
  A.FARMER_ID,
  A.FARMER_CD,
  A.FARMER_NAME,
  A.BUSINESS_DATE,
  A.BUSINESS_YEAR,
  A.BEGIN_DATE,
  A.END_DATE,
  A.TRANSPLANT_AREA,
  A.LINE_DISTANCE,
  A.LINE_DISTANCE_NAME,
  A.ONE_DISTANCE,
  A.ONE_DISTANCE_NAME,
  A.WORK_EFFECT_EVAL,
  A.WORK_EFFECT_EVAL_NAME,
  A.ORG_CD,
  A.AREA_CD
) 
 VALUES
 (
  B.TRANSPLANT_FM_D_ID,
  B.FARMER_ID,
  B.FARMER_CD,
  B.FARMER_NAME,
  B.BUSINESS_DATE,
  B.BUSINESS_YEAR,
  B.BEGIN_DATE,
  B.END_DATE,
  B.TRANSPLANT_AREA,
  B.LINE_DISTANCE,
  B.LINE_DISTANCE_NAME,
  B.ONE_DISTANCE,
  B.ONE_DISTANCE_NAME,
  B.WORK_EFFECT_EVAL,
  B.WORK_EFFECT_EVAL_NAME,
  B.ORG_CD,
  B.AREA_CD
); 

COMMIT;
SET V_STEP = 'R_PT_TRANSPLANT_FM_D UPDATEORG';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
MERGE INTO R_PT_TRANSPLANT_FM_D A
USING
(
  SELECT CASE WHEN B.PROV = '0' THEN NULL ELSE B.PROV END AS PROV,
         CASE WHEN B.CITC = '0' THEN NULL ELSE B.CITC END AS CITC,
         CASE WHEN B.COUC = '0' THEN NULL ELSE B.COUC END AS COUC,
         CASE WHEN B.STAC = '0' THEN NULL ELSE B.STAC END AS STAC,
         CASE WHEN B.SSTC = '0' THEN NULL ELSE B.SSTC END AS SSTC,
         CASE WHEN B.SLIN = '0' THEN NULL ELSE B.SLIN END AS SLIN,
         B.PROV_NAME,
         B.CITC_NAME,
         B.COUC_NAME,
         B.STAC_NAME,
         B.SSTC_NAME,
         B.SLIN_NAME, 
         B.ORG_UNIQUE_CD,
         B.ORG_NAME
    FROM B_ORG B
   WHERE B.ORG_TYPE = '2'
) B
ON (B.ORG_UNIQUE_CD = A.ORG_CD AND A.DATA_STATE = '1'  AND A.BUSINESS_YEAR >= V_YEAR AND A.PROV_NAME IS NULL) 
WHEN MATCHED THEN
  UPDATE SET
         A.PROV       = B.PROV      ,
         A.CITC       = B.CITC      ,
         A.COUC       = B.COUC      ,
         A.STAC       = B.STAC      ,
         A.SSTC       = B.SSTC      ,
         A.SLIN       = B.SLIN      ,
         A.PROV_NAME  = B.PROV_NAME ,
         A.CITC_NAME  = B.CITC_NAME ,
         A.COUC_NAME  = B.COUC_NAME ,
         A.STAC_NAME  = B.STAC_NAME ,
         A.SSTC_NAME  = B.SSTC_NAME ,
         A.SLIN_NAME  = B.SLIN_NAME ,
         A.ORG_NAME   = B.ORG_NAME   
;

SET V_STEP = 'R_PT_TRANSPLANT_FM_D UPDATEDIV';
CALL P_DEBUG_LOG(V_LOG_GROUP,V_PROC_NAME,V_PROC_NAME,V_STEP,TO_CHAR(CURRENT TIMESTAMP,'YYYY-MM-DD HH24:MI:SS')||V_LOG);
MERGE INTO R_PT_TRANSPLANT_FM_D A
USING
(
  SELECT CASE WHEN B.PROV = '0' THEN NULL ELSE B.PROV END AS PROV,
         CASE WHEN B.CITC = '0' THEN NULL ELSE B.CITC END AS CITC,
         CASE WHEN B.COUC = '0' THEN NULL ELSE B.COUC END AS COUC,
         CASE WHEN B.STAC = '0' THEN NULL ELSE B.STAC END AS STAC,
         CASE WHEN B.SSTC = '0' THEN NULL ELSE B.SSTC END AS SSTC,
         CASE WHEN B.SLIN = '0' THEN NULL ELSE B.SLIN END AS SLIN,
         B.PROV_NAME,
         B.CITC_NAME,
         B.COUC_NAME,
         B.STAC_NAME,
         B.SSTC_NAME,
         B.SLIN_NAME, 
         B.ORG_UNIQUE_CD,
         B.ORG_NAME
    FROM B_ORG B
   WHERE B.ORG_TYPE = '2'
) B
ON (B.ORG_UNIQUE_CD = A.ORG_CD AND A.DATA_STATE = '1'  AND A.BUSINESS_YEAR >= V_YEAR AND A.PROV_NAME IS NULL) 
WHEN MATCHED THEN
  UPDATE SET
         A.PROV       = B.PROV      ,
         A.CITC       = B.CITC      ,
         A.COUC       = B.COUC      ,
         A.STAC       = B.STAC      ,
         A.SSTC       = B.SSTC      ,
         A.SLIN       = B.SLIN      ,
         A.PROV_NAME  = B.PROV_NAME ,
         A.CITC_NAME  = B.CITC_NAME ,
         A.COUC_NAME  = B.COUC_NAME ,
         A.STAC_NAME  = B.STAC_NAME ,
         A.SSTC_NAME  = B.SSTC_NAME ,
         A.SLIN_NAME  = B.SLIN_NAME ,
         A.ORG_NAME   = B.ORG_NAME   
;

END
@

 

 